{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Input } from 'reactstrap';\nimport { Button } from 'react-bootstrap';\nimport backendServer from \"../../webConfig\";\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userLogin, restaurantLogin } from \"../../actions/loginActions\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // if (this.validateLogin() === true) {\n\n      const credential = {\n        email: this.state.email,\n        password: this.state.password,\n        usertype: this.state.usertype\n      };\n\n      if (credential.usertype === 'customer') {\n        // console.log(\"customer\")\n        this.props.userLogin(credential);\n      } else if (credential.usertype === 'restaurant') {\n        this.props.restaurantLogin(credential);\n      } else {\n        alert(\"Provide valid user type\");\n      } // }\n\n    };\n\n    this.register = e => {\n      e.preventDefault(); //this.props.login.message = null;\n\n      const {\n        history\n      } = this.props;\n      history.push('/register');\n    };\n\n    this.state = {\n      message: null\n    }; // this.state = {\n    //     email: null,\n    //     password: null,\n    //     authFlag: false,\n    //     message:null,\n    //     phone:null,\n    //     username:null,\n    //     owner:null,\n    //     usertype:null,\n    //     restaurantname:null,\n    //     zipcode:null,\n    //     description:null,\n    //     timing:null,\n    //     userid:null,\n    //     restaurantid:null,\n    //     status:null,\n    //     city:null,\n    //     address:null,\n    //     deliverytype:null,\n    //     foodtype:null,\n    //     days:null,\n    //     profilepic:null,\n    //     restprofilepic:null,\n    // };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillMount() {}\n\n  render() {\n    let redirectVar = null;\n    let redirectHome = null;\n    let message = \"\";\n\n    if (cookie.load('cookie')) {\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 28\n        }\n      });\n    }\n\n    if (this.props.login) {\n      if (this.props.login.message === \"Customer Found\") {\n        redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/CustomerHome\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 32\n          }\n        });\n        localStorage.setItem(\"userid\", this.props.login.result.userid);\n        localStorage.setItem(\"username\", this.props.login.result.username);\n        this.props.login.message = null;\n        message = null;\n      } else if (this.props.login.message === \"Restaurant Found\") {\n        redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/RestaurantHome\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 32\n          }\n        });\n        this.props.login.message = null;\n        message = null;\n      }\n\n      if (this.props.login.message === \"Invalid credentials\" || this.props.login.message === \"Invalid user\") {\n        message = this.props.login.message;\n      }\n    } else {\n      message = \"\";\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 28\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, redirectHome, redirectVar, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, \"Welcome to Uber Eats.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"Please enter your email and password.\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Email :\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"email\",\n      onChange: this.handleChange,\n      placeholder: \"Email Id\",\n      pattern: \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\",\n      title: \"Please enter valid email address\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }), \"Password :\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      onChange: this.handleChange,\n      placeholder: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"usertype\",\n      name: \"usertype\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, \"User type\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"restaurant\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, \"Restaurant\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"New to Uber Eats?\", /*#__PURE__*/React.createElement(Button, {\n      variant: \"link\",\n      onClick: this.register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 84\n      }\n    }, \"Create an account\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#ff0000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 48\n      }\n    }, message))))))) // </Col>\n    // </Row>\n    // </Container>\n    ;\n  }\n\n}\n\nLogin.propTypes = {\n  userLogin: PropTypes.func.isRequired,\n  restaurantLogin: PropTypes.func.isRequired,\n  login: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login.login\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userLogin,\n  restaurantLogin\n})(Login);","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Login/Login.js"],"names":["React","Component","Link","Redirect","axios","cookie","Input","Button","backendServer","validator","PropTypes","connect","userLogin","restaurantLogin","Login","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","credential","email","state","password","usertype","alert","register","history","push","message","bind","componentWillMount","render","redirectVar","redirectHome","load","login","localStorage","setItem","result","userid","username","color","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport {Input} from 'reactstrap';\nimport { Button } from 'react-bootstrap';\nimport backendServer from \"../../webConfig\";\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userLogin,restaurantLogin} from \"../../actions/loginActions\";\nclass Login extends Component {\n \n    constructor(props) {\n        super(props);\n        this.state= {\n            message : null\n        };\n        // this.state = {\n        //     email: null,\n        //     password: null,\n        //     authFlag: false,\n        //     message:null,\n        //     phone:null,\n        //     username:null,\n        //     owner:null,\n        //     usertype:null,\n        //     restaurantname:null,\n        //     zipcode:null,\n        //     description:null,\n        //     timing:null,\n        //     userid:null,\n        //     restaurantid:null,\n        //     status:null,\n        //     city:null,\n        //     address:null,\n        //     deliverytype:null,\n        //     foodtype:null,\n        //     days:null,\n        //     profilepic:null,\n        //     restprofilepic:null,\n        \n        // };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillMount() {\n    \n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n  \n  \n    handleSubmit = (e) => {\n        e.preventDefault();\n        // if (this.validateLogin() === true) {\n        const credential = {\n            email: this.state.email,\n            password: this.state.password,\n            usertype:this.state.usertype\n        }\n        \n        if(credential.usertype === 'customer'){\n            // console.log(\"customer\")\n            this.props.userLogin(credential);\n        }else if(credential.usertype === 'restaurant'){\n            this.props.restaurantLogin(credential);\n            \n        }else{\n            alert(\"Provide valid user type\");\n        }\n       // }\n        \n    }\n    register = (e) => {\n        e.preventDefault();\n        //this.props.login.message = null;\n        const {history} = this.props;\n        history.push('/register'); \n    }\n    render() {\n        let redirectVar = null;\n        let redirectHome = null;\n        let message = \"\"\n        if (cookie.load('cookie')) { \n            redirectHome = <Redirect to=\"/\" />\n           \n\n        }\n        if(this.props.login){\n            \n            if(this.props.login.message === \"Customer Found\"){\n                redirectHome = <Redirect to=\"/CustomerHome\" />\n                localStorage.setItem(\"userid\",this.props.login.result.userid)\n                localStorage.setItem(\"username\",this.props.login.result.username)\n                this.props.login.message = null;\n                message = null;\n            }else if(this.props.login.message === \"Restaurant Found\"){\n                redirectHome = <Redirect to=\"/RestaurantHome\" />\n                this.props.login.message = null;\n                message = null;\n            }\n            if(this.props.login.message === \"Invalid credentials\" ||this.props.login.message === \"Invalid user\" ){\n                message = this.props.login.message;\n            }\n        }\n       else{\n            message = \"\";\n            redirectHome = <Redirect to=\"/Login\" />\n        }\n\n\n        return (\n            \n            \n            <div className =\"body-login\">{redirectHome}\n                {redirectVar}\n\n            <div className=\"container\">\n            <div className=\"login-form\">\n            <div className=\"main-div\">\n            <div className=\"panel\">\n                <h1>Welcome to Uber Eats.</h1>\n                <p>Please enter your email and password.</p>\n            </div >\n            <form onSubmit={this.handleSubmit}>\n              Email :\n            <input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                onChange={this.handleChange}\n                placeholder=\"Email Id\"\n                pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\"\n                title=\"Please enter valid email address\"\n                required\n              />\n              Password : \n              <input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                onChange={this.handleChange}\n                placeholder=\"Password\"\n                required\n              />\n            <div className=\"form-group\">\n              <select className=\"usertype\" name=\"usertype\" value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"\">User type</option>\n                        <option value=\"customer\">Customer</option>\n                        <option value=\"restaurant\">Restaurant</option>\n                    </select>\n                  </div> \n             \n              <br />\n              <button type=\"submit\" className=\"btn btn-primary\">\n              Login\n              </button>\n              <h4>New to Uber Eats?<Button  variant=\"link\" onClick={this.register}><h4>Create an account</h4></Button></h4>\n              <div  style={{color: \"#ff0000\"}}><h4>{message}</h4></div> \n              </form>\n            </div>\n          </div>\n        </div>\n        </div>\n        \n        // </Col>\n        // </Row>\n        // </Container>\n        )\n    }\n}\n\nLogin.propTypes = {\n    userLogin: PropTypes.func.isRequired,\n    restaurantLogin: PropTypes.func.isRequired,\n    login: PropTypes.object.isRequired,\n  };\n  \n  const mapStateToProps = (state) => {\n    return {\n      login: state.login.login,\n    };\n  };\n  export default connect(mapStateToProps, {userLogin,restaurantLogin})(Login);"]},"metadata":{},"sourceType":"module"}