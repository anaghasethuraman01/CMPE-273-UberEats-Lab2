{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Register/Register.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Input } from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userSignup } from \"../../actions/signupActions\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.validateCustRegister = () => {\n      let isValid = true;\n\n      if (this.nullOrEmpty(this.state.username) || this.nullOrEmpty(this.state.email) || this.nullOrEmpty(this.state.password)) {\n        alert(\"Fields cannot be empty\");\n        isValid = false;\n      } else {\n        if (!validator.isEmail(this.state.email)) {\n          alert('Enter valid Email!');\n          isValid = false;\n        }\n\n        if (!this.state.username.match(/^[a-zA-Z ]+$/)) {\n          alert(\"Name can contain only alphabets\");\n          isValid = false;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.validateOwnerRegister = () => {\n      let isValid = true;\n\n      if (this.nullOrEmpty(this.state.username) || this.nullOrEmpty(this.state.email) || this.nullOrEmpty(this.state.password) || this.nullOrEmpty(this.state.zipcode)) {\n        alert(\"Fields cannot be empty\");\n        isValid = false;\n      } else {\n        if (!validator.isEmail(this.state.email)) {\n          alert('Enter valid Email!');\n          isValid = false;\n        }\n\n        if (!this.state.username.match(/^[a-zA-Z ]+$/)) {\n          alert(\"Name can contain only alphabets\");\n          isValid = false;\n        }\n\n        if (!this.state.zipcode.match(/^[0-9]+$/)) {\n          alert(\"Zipcode can only contain numbers\");\n          isValid = false;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const buyerData = {\n        name: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        //restaurantname: \"N/A\",\n        zipcode: \"N/A\",\n        owner: false\n      };\n      const ownerData = {\n        name: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        //restaurantname: this.state.restaurantname,\n        zipcode: this.state.zipcode,\n        owner: true\n      };\n      console.log(ownerData);\n\n      if (!this.state.owner) {\n        if (this.validateCustRegister() === true) {\n          this.props.userSignup(buyerData);\n        }\n      } else {\n        if (this.validateOwnerRegister() === true) {\n          this.props.userSignup(ownerData);\n        }\n      }\n    };\n\n    this.switchForm = e => {\n      !this.state.owner ? this.setState({\n        owner: true\n      }) : this.setState({\n        owner: false\n      });\n    };\n\n    this.state = {};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.switchForm = this.switchForm.bind(this);\n  }\n\n  nullOrEmpty(str) {\n    return str === null || str === \"\";\n  }\n\n  render() {\n    //localStorage.setItem(\"message\",this.props.user.message)\n    let redirectHome = null;\n    var ownerForm = null;\n    var userForm = null;\n    var accountType = \"Owner\";\n\n    if (this.props.user.message === \"User Registration successful\") {\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 28\n        }\n      });\n      this.props.user.message = null;\n    } else {\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 28\n        }\n      });\n    } // if(this.state.message == \"User email already registered\"){\n    //     alert(\"Email already exists\");\n    // }\n\n\n    if (this.state.owner) {\n      ownerForm = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, \"Restaurant Name:  \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        name: \"name\",\n        onChange: this.onChange,\n        placeholder: \"Enter Restaurant Name\",\n        pattern: \"^[A-Za-z0-9 ]+$\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 39\n        }\n      }), \"ZipCode: \", /*#__PURE__*/React.createElement(Input, {\n        className: \"form-control\",\n        type: \"number\",\n        name: \"zipcode\",\n        maxlength: \"5\",\n        placeholder: \"5 digits\",\n        value: this.state.zipcode,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 30\n        }\n      })));\n      accountType = \"User\";\n    } else {\n      userForm = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, \"Name: \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        class: \"form-control\",\n        name: \"name\",\n        onChange: this.handleChange,\n        placeholder: \"Enter Customer Name\",\n        pattern: \"^[A-Za-z0-9 ]+$\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }\n      }));\n      accountType = \"Owner\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, redirectHome, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 19\n      }\n    }, \"Let's get started.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, \"Please enter required details to register.\")), userForm, ownerForm, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 19\n      }\n    }, \"Email: \", /*#__PURE__*/React.createElement(Input, {\n      className: \"form-control\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"example@gmail.com\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, \"Password: \", /*#__PURE__*/React.createElement(Input, {\n      className: \"form-control\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"At least 6 characters\",\n      minlength: \"6\",\n      maxlength: \"16\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-primary\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }, \"Register\"), \" \\xA0\", /*#__PURE__*/React.createElement(Button, {\n      onClick: this.switchForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, \"Sign Up as \", accountType)), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 48\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 83\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#ff0000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 52\n      }\n    }, this.props.user.message))))));\n  }\n\n}\n\nRegister.propTypes = {\n  userSignup: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.signup.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userSignup\n})(Register);","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Register/Register.js"],"names":["React","Component","Link","Button","Input","Redirect","validator","PropTypes","connect","userSignup","Register","constructor","props","handleChange","e","preventDefault","setState","target","name","value","console","log","state","validateCustRegister","isValid","nullOrEmpty","username","email","password","alert","isEmail","match","validateOwnerRegister","zipcode","handleSubmit","buyerData","owner","ownerData","switchForm","bind","str","render","redirectHome","ownerForm","userForm","accountType","user","message","onChange","color","propTypes","func","isRequired","object","mapStateToProps","signup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button ,Input} from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userSignup } from \"../../actions/signupActions\";\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.switchForm = this.switchForm.bind(this);\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({ [e.target.name]: e.target.value });\n        console.log(this.state);\n    }\n    \n    nullOrEmpty(str) {\n        return str === null || str === \"\" \n    }\n    validateCustRegister = () => {\n        let isValid = true;\n        if(this.nullOrEmpty(this.state.username)  || this.nullOrEmpty(this.state.email) ||  this.nullOrEmpty(this.state.password)){\n        alert(\"Fields cannot be empty\");\n           isValid = false;\n        }\n        else{\n            if (!validator.isEmail(this.state.email)) {\n                alert('Enter valid Email!')\n                isValid = false;\n            }\n            \n            if(!this.state.username.match(/^[a-zA-Z ]+$/)){\n                alert(\"Name can contain only alphabets\")\n                isValid = false;\n            }\n        } \n        return isValid;\n     }\n     validateOwnerRegister = () => {\n        let isValid = true;\n        if(this.nullOrEmpty(this.state.username)  || this.nullOrEmpty(this.state.email) ||  this.nullOrEmpty(this.state.password)\n            ||this.nullOrEmpty(this.state.zipcode)) {\n        alert(\"Fields cannot be empty\");\n           isValid = false;\n        }\n        else{\n            if (!validator.isEmail(this.state.email)) {\n                alert('Enter valid Email!')\n                isValid = false;\n            }\n            if(!this.state.username.match(/^[a-zA-Z ]+$/)){\n                alert(\"Name can contain only alphabets\")\n                isValid = false;\n            }\n            if(!this.state.zipcode.match(/^[0-9]+$/)){\n                alert(\"Zipcode can only contain numbers\")\n                isValid = false;\n            }\n\n        } \n        return isValid;\n     }\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const buyerData = {\n            name: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            //restaurantname: \"N/A\",\n            zipcode: \"N/A\",\n            owner: false\n        }\n\n        const ownerData = {\n            name: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            //restaurantname: this.state.restaurantname,\n            zipcode: this.state.zipcode,\n            owner: true\n        }\n        console.log(ownerData);\n        if (!this.state.owner) {\n            if (this.validateCustRegister() === true) {           \n                this.props.userSignup(buyerData);\n            }\n        } else {\n           \n            if (this.validateOwnerRegister() === true) {           \n                this.props.userSignup(ownerData);\n            }\n            \n        }\n\n    }\n\n    //switch between user and owner sign up form\n    switchForm = (e) => {\n        (!this.state.owner) ? this.setState({ owner: true }) : this.setState({ owner: false });\n    }\n\n    render() {\n        \n        //localStorage.setItem(\"message\",this.props.user.message)\n        let redirectHome = null;\n        var ownerForm = null;\n        var userForm = null;\n        var accountType = \"Owner\";\n        if(this.props.user.message === \"User Registration successful\"){\n            redirectHome = <Redirect to=\"/Login\" />\n            this.props.user.message = null;\n        }\n        else{\n            redirectHome = <Redirect to=\"/Register\" />\n           \n        }\n        \n        // if(this.state.message == \"User email already registered\"){\n        //     alert(\"Email already exists\");\n        // }\n        if (this.state.owner) {\n            ownerForm =\n            <div className=\"form-group\">\n                <div >\n                    Restaurant Name:  <input type=\"text\" class=\"form-control\" name=\"name\" onChange={this.onChange} placeholder=\"Enter Restaurant Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n                    ZipCode: <Input  className=\"form-control\" type=\"number\" name=\"zipcode\" maxlength=\"5\" placeholder=\"5 digits\" value={this.state.zipcode} onChange={this.handleChange} required></Input>\n                </div>\n                </div>\n            accountType = \"User\";\n        } else{\n            userForm =\n            <div >\n            Name: <input type=\"text\" class=\"form-control\" name=\"name\" onChange={this.handleChange} placeholder=\"Enter Customer Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n        </div>\n         accountType = \"Owner\";\n        }\n\n        return (\n\n\n            <div className =\"body-login\">\n                {redirectHome}\n           \n            <div className=\"container\">\n              <div className=\"login-form\">\n                <div className=\"main-div\">\n                  <div className=\"panel\">\n                  <h1>Let's get started.</h1>\n                    <p>Please enter required details to register.</p>\n                  </div>\n                  {userForm}\n                  {ownerForm}\n                  <div className=\"form-group\">\n\n                  Email: <Input   className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"example@gmail.com\" value={this.state.email} onChange={this.handleChange} required></Input>\n                   \n                  </div>\n                  <div className=\"form-group\">\n\n                  Password: <Input className=\"form-control\" type=\"password\" name=\"password\" placeholder=\"At least 6 characters\" minlength=\"6\" maxlength=\"16\" id=\"password\" value={this.state.password} onChange={this.handleChange} required></Input>\n                    \n                  </div>\n                  <div className=\"form-group\">\n                  <Button className=\"btn btn-primary\" onClick={this.handleSubmit}>Register</Button> &nbsp;\n                <Button onClick={this.switchForm}>Sign Up as {accountType}</Button>\n                  </div>\n                  <h4>Already have an account? <Link to=\"/login\">Login</Link></h4><br />\n                  <div  style={{color: \"#ff0000\"}}><h4>{this.props.user.message}</h4></div> \n                  </div>\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\nRegister.propTypes = {\n    userSignup: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n   \n  };\n  \n  const mapStateToProps = (state) => {\n    return {\n      user: state.signup.user,\n    };\n  };\n  \n  export default connect(mapStateToProps, { userSignup})(Register);"]},"metadata":{},"sourceType":"module"}