{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Register/Register.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Input } from 'reactstrap';\nimport { Redirect } from 'react-router';\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userSignup } from \"../../actions/signupActions\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.validateCustRegister = () => {\n      let isValid = true;\n\n      if (this.nullOrEmpty(this.state.username) || this.nullOrEmpty(this.state.email) || this.nullOrEmpty(this.state.password)) {\n        alert(\"Fields cannot be empty\");\n        isValid = false;\n      } else {\n        if (!validator.isEmail(this.state.email)) {\n          alert('Enter valid Email!');\n          isValid = false;\n        }\n\n        if (!this.state.username.match(/^[a-zA-Z ]+$/)) {\n          alert(\"Name can contain only alphabets\");\n          isValid = false;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const buyerData = {\n        name: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        //restaurantname: \"N/A\",\n        zipcode: \"N/A\",\n        owner: false\n      };\n      const ownerData = {\n        name: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        //restaurantname: this.state.restaurantname,\n        zipcode: this.state.zipcode,\n        owner: true\n      };\n      console.log(ownerData);\n\n      if (!this.state.owner) {\n        this.props.userSignup(buyerData);\n      } else {\n        this.props.userSignup(ownerData);\n      }\n    };\n\n    this.login = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/login');\n    };\n\n    this.switchForm = e => {\n      !this.state.owner ? this.setState({\n        owner: true\n      }) : this.setState({\n        owner: false\n      });\n    };\n\n    this.state = {};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.switchForm = this.switchForm.bind(this);\n  }\n\n  nullOrEmpty(str) {\n    return str === null || str === \"\";\n  }\n\n  render() {\n    //localStorage.setItem(\"message\",this.props.user.message)\n    let redirectHome = null;\n    var ownerForm = null;\n    var userForm = null;\n    var accountType = \"Owner\";\n\n    if (this.props.user.message === \"User Registration successful\") {\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 28\n        }\n      });\n      this.props.user.message = null;\n    } else {\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Register\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 28\n        }\n      });\n    } // if(this.state.message == \"User email already registered\"){\n    //     alert(\"Email already exists\");\n    // }\n\n\n    if (this.state.owner) {\n      ownerForm = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }, \"Restaurant Name:  \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"username\",\n        onChange: this.handleChange,\n        placeholder: \"Enter Restaurant Name\",\n        pattern: \"^[A-Za-z0-9 ]+$\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 37\n        }\n      }), \"ZipCode: \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"zipcode\",\n        onChange: this.handleChange,\n        placeholder: \"Enter zip code\",\n        pattern: \"^[0-9]{5,6}$\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 28\n        }\n      }), \"Email:  \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"email\",\n        onChange: this.handleChange,\n        placeholder: \"Email Id\",\n        pattern: \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 27\n        }\n      }), \"Password:  \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        name: \"password\",\n        onChange: this.handleChange,\n        placeholder: \"Password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 30\n        }\n      })))));\n      accountType = \"User\";\n    } else {\n      userForm = /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, \"Name: \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"username\",\n        onChange: this.handleChange,\n        placeholder: \"Enter Customer Name\",\n        pattern: \"^[A-Za-z0-9 ]+$\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 19\n        }\n      })), \"Email:  \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"email\",\n        onChange: this.handleChange,\n        placeholder: \"Email Id\",\n        pattern: \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 22\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, \"Password:  \", /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        name: \"password\",\n        onChange: this.handleChange,\n        placeholder: \"Password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 30\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 19\n        }\n      }));\n      accountType = \"Owner\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, redirectHome, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 19\n      }\n    }, \"Let's get started.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, \"Please enter required details to register.\")), userForm, ownerForm, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, \"Register\"), \" \\xA0\", /*#__PURE__*/React.createElement(Button, {\n      onClick: this.switchForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, \"Sign Up as \", accountType), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, \"Already have an account?\", /*#__PURE__*/React.createElement(Button, {\n      color: \"link\",\n      onClick: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 90\n      }\n    }, \"Login\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#ff0000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 52\n      }\n    }, this.props.user.message))))));\n  }\n\n}\n\nRegister.propTypes = {\n  userSignup: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.signup.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userSignup\n})(Register);","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Register/Register.js"],"names":["React","Component","Link","Button","Input","Redirect","validator","PropTypes","connect","userSignup","Register","constructor","props","handleChange","e","preventDefault","setState","target","name","value","console","log","state","validateCustRegister","isValid","nullOrEmpty","username","email","password","alert","isEmail","match","handleSubmit","buyerData","zipcode","owner","ownerData","login","history","push","switchForm","bind","str","render","redirectHome","ownerForm","userForm","accountType","user","message","color","propTypes","func","isRequired","object","mapStateToProps","signup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button ,Input} from 'reactstrap';\nimport { Redirect } from 'react-router';\n\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userSignup } from \"../../actions/signupActions\";\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.switchForm = this.switchForm.bind(this);\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({ [e.target.name]: e.target.value });\n        console.log(this.state);\n    }\n    \n    nullOrEmpty(str) {\n        return str === null || str === \"\" \n    }\n    validateCustRegister = () => {\n        let isValid = true;\n        if(this.nullOrEmpty(this.state.username)  || this.nullOrEmpty(this.state.email) ||  this.nullOrEmpty(this.state.password)){\n        alert(\"Fields cannot be empty\");\n           isValid = false;\n        }\n        else{\n            if (!validator.isEmail(this.state.email)) {\n                alert('Enter valid Email!')\n                isValid = false;\n            }\n            \n            if(!this.state.username.match(/^[a-zA-Z ]+$/)){\n                alert(\"Name can contain only alphabets\")\n                isValid = false;\n            }\n        } \n        return isValid;\n     }\n   \n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const buyerData = {\n            name: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            //restaurantname: \"N/A\",\n            zipcode: \"N/A\",\n            owner: false\n        }\n\n        const ownerData = {\n            name: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            //restaurantname: this.state.restaurantname,\n            zipcode: this.state.zipcode,\n            owner: true\n        }\n        console.log(ownerData);\n        if (!this.state.owner) {   \n                this.props.userSignup(buyerData);          \n        } else {\n                this.props.userSignup(ownerData);   \n        }\n\n    }\n    login = (e) => {\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/login'); \n    }\n    //switch between user and owner sign up form\n    switchForm = (e) => {\n        (!this.state.owner) ? this.setState({ owner: true }) : this.setState({ owner: false });\n    }\n\n    render() {\n        \n        //localStorage.setItem(\"message\",this.props.user.message)\n        let redirectHome = null;\n        var ownerForm = null;\n        var userForm = null;\n        var accountType = \"Owner\";\n        if(this.props.user.message === \"User Registration successful\"){\n            redirectHome = <Redirect to=\"/Login\" />\n            this.props.user.message = null;\n        }\n        else{\n            redirectHome = <Redirect to=\"/Register\" />\n           \n        }\n        \n        // if(this.state.message == \"User email already registered\"){\n        //     alert(\"Email already exists\");\n        // }\n        if (this.state.owner) {\n            ownerForm =\n           \n            <div className=\"form-group\">\n                <div >\n                <form onSubmit={this.handleSubmit}>\n                  <div className=\"form-group\">\n                      \n                  Restaurant Name:  <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Restaurant Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n                  ZipCode: <input type=\"text\" className=\"form-control\" name=\"zipcode\" onChange={this.handleChange} placeholder=\"Enter zip code\" pattern=\"^[0-9]{5,6}$\" required />\n                  Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n\n                  Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />\n                    \n                  </div>\n                 \n                  \n                \n                  </form>\n\n                </div>\n                </div>\n            \n            accountType = \"User\";\n        } else{\n            userForm =\n            <form onSubmit={this.handleSubmit}>\n            <div >\n\n            Name: <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Customer Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n             </div>\n             Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n                \n                  <div className=\"form-group\">\n\n                  Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />\n                    \n                  </div>\n                  <div className=\"form-group\">\n                 \n                  </div>\n                  \n                  \n        \n        </form>\n         accountType = \"Owner\";\n        }\n       \n        return (\n\n\n            <div className =\"body-login\">\n                {redirectHome}\n           \n            <div className=\"container\">\n              <div className=\"login-form\">\n                <div className=\"main-div\">\n                  <div className=\"panel\">\n                  <h1>Let's get started.</h1>\n                    <p>Please enter required details to register.</p>\n                  </div>\n                  {userForm}\n                  {ownerForm}\n                  <Button className=\"btn btn-primary\" >Register</Button> &nbsp;\n                  <Button onClick={this.switchForm}>Sign Up as {accountType}</Button>\n                 \n                  <h4>Already have an account?<Button  color=\"link\" onClick={this.login}><h4>Login</h4></Button></h4>\n                  <div  style={{color: \"#ff0000\"}}><h4>{this.props.user.message}</h4></div> \n                  </div>\n                </div>\n              </div>\n            </div>\n        )\n    }\n}\nRegister.propTypes = {\n    userSignup: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n   \n  };\n  \n  const mapStateToProps = (state) => {\n    return {\n      user: state.signup.user,\n    };\n  };\n  \n  export default connect(mapStateToProps, { userSignup})(Register);"]},"metadata":{},"sourceType":"module"}