{"ast":null,"code":"// import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n// import { Button ,Input} from 'reactstrap';\n// import { Redirect } from 'react-router';\n// import validator from 'validator';\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import { userSignup } from \"../../actions/signupActions\";\n// class Register extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {};\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//         this.switchForm = this.switchForm.bind(this);\n//     }\n//     handleChange = (e) => {\n//         e.preventDefault();\n//         this.setState({ [e.target.name]: e.target.value });\n//         console.log(this.state);\n//     }\n//     nullOrEmpty(str) {\n//         return str === null || str === \"\" \n//     }\n//     validateCustRegister = () => {\n//         let isValid = true;\n//         if(this.nullOrEmpty(this.state.username)  || this.nullOrEmpty(this.state.email) ||  this.nullOrEmpty(this.state.password)){\n//         alert(\"Fields cannot be empty\");\n//            isValid = false;\n//         }\n//         else{\n//             if (!validator.isEmail(this.state.email)) {\n//                 alert('Enter valid Email!')\n//                 isValid = false;\n//             }\n//             if(!this.state.username.match(/^[a-zA-Z ]+$/)){\n//                 alert(\"Name can contain only alphabets\")\n//                 isValid = false;\n//             }\n//         } \n//         return isValid;\n//      }\n//     handleSubmit = (e) => {\n//         e.preventDefault();\n//         const buyerData = {\n//             name: this.state.username,\n//             email: this.state.email,\n//             password: this.state.password,\n//             //restaurantname: \"N/A\",\n//             zipcode: \"N/A\",\n//             owner: false\n//         }\n//         const ownerData = {\n//             name: this.state.username,\n//             email: this.state.email,\n//             password: this.state.password,\n//             //restaurantname: this.state.restaurantname,\n//             zipcode: this.state.zipcode,\n//             owner: true\n//         }\n//         console.log(ownerData);\n//         if (!this.state.owner) {   \n//                 this.props.userSignup(buyerData);          \n//         } else {\n//                 this.props.userSignup(ownerData);   \n//         }\n//     }\n//     login = (e) => {\n//         e.preventDefault();\n//         const {history} = this.props;\n//         history.push('/login'); \n//     }\n//     //switch between user and owner sign up form\n//     switchForm = (e) => {\n//         (!this.state.owner) ? this.setState({ owner: true }) : this.setState({ owner: false });\n//     }\n//     render() {\n//         //localStorage.setItem(\"message\",this.props.user.message)\n//         let redirectHome = null;\n//         var ownerForm = null;\n//         var userForm = null;\n//         var accountType = \"Owner\";\n//         if(this.props.user.message === \"User Registration successful\"){\n//             redirectHome = <Redirect to=\"/Login\" />\n//             this.props.user.message = null;\n//         }\n//         else{\n//             redirectHome = <Redirect to=\"/Register\" />\n//         }\n//         // if(this.state.message == \"User email already registered\"){\n//         //     alert(\"Email already exists\");\n//         // }\n//         if (this.state.owner) {\n//             ownerForm =\n//             <div className=\"form-group\">\n//                 <div >\n//                 <form onSubmit={this.handleSubmit}>\n//                   <div className=\"form-group\">\n//                   Restaurant Name:  <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Restaurant Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n//                   ZipCode: <input type=\"text\" className=\"form-control\" name=\"zipcode\" onChange={this.handleChange} placeholder=\"Enter zip code\" pattern=\"^[0-9]{5,6}$\" required />\n//                   Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n//                   Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />\n//                   <Button className=\"btn btn-primary\" >Register</Button> &nbsp;\n//                   </div>\n//                   </form>\n//                 </div>\n//                 </div>\n//             accountType = \"User\";\n//         } else{\n//             userForm =\n//             <form onSubmit={this.handleSubmit}>\n//             <div className=\"form-group\">\n//             Name: <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Customer Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n//              Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n//                   Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />   \n//                   <Button className=\"btn btn-primary\" >Register</Button> &nbsp;\n//                   </div>\n//         </form>\n//          accountType = \"Owner\";\n//         }\n//         return (\n//             <div className =\"body-login\">\n//                 {redirectHome}\n//             <div className=\"container\">\n//               <div className=\"login-form\">\n//                 <div className=\"main-div\">\n//                   <div className=\"panel\">\n//                   <h1>Let's get started.</h1>\n//                     <p>Please enter required details to register.</p>\n//                   </div>\n//                   {userForm}\n//                   {ownerForm}\n//                   <Button onClick={this.switchForm}>Sign Up as {accountType}</Button>\n//                   <h4>Already have an account?<Button  color=\"link\" onClick={this.login}><h4>Login</h4></Button></h4>\n//                   <div  style={{color: \"#ff0000\"}}><h4>{this.props.user.message}</h4></div> \n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//         )\n//     }\n// }\n// Register.propTypes = {\n//     userSignup: PropTypes.func.isRequired,\n//     user: PropTypes.object.isRequired,\n//   };\n//   const mapStateToProps = (state) => {\n//     return {\n//       user: state.signup.user,\n//     };\n//   };\n//   export default connect(mapStateToProps, { userSignup})(Register);","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Register/Register.js"],"names":[],"mappingssourcesContent":["\n\n\n// import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n// import { Button ,Input} from 'reactstrap';\n// import { Redirect } from 'react-router';\n\n// import validator from 'validator';\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import { userSignup } from \"../../actions/signupActions\";\n// class Register extends Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.state = {};\n\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//         this.switchForm = this.switchForm.bind(this);\n//     }\n\n//     handleChange = (e) => {\n//         e.preventDefault();\n//         this.setState({ [e.target.name]: e.target.value });\n//         console.log(this.state);\n//     }\n    \n//     nullOrEmpty(str) {\n//         return str === null || str === \"\" \n//     }\n//     validateCustRegister = () => {\n//         let isValid = true;\n//         if(this.nullOrEmpty(this.state.username)  || this.nullOrEmpty(this.state.email) ||  this.nullOrEmpty(this.state.password)){\n//         alert(\"Fields cannot be empty\");\n//            isValid = false;\n//         }\n//         else{\n//             if (!validator.isEmail(this.state.email)) {\n//                 alert('Enter valid Email!')\n//                 isValid = false;\n//             }\n            \n//             if(!this.state.username.match(/^[a-zA-Z ]+$/)){\n//                 alert(\"Name can contain only alphabets\")\n//                 isValid = false;\n//             }\n//         } \n//         return isValid;\n//      }\n   \n//     handleSubmit = (e) => {\n//         e.preventDefault();\n\n//         const buyerData = {\n//             name: this.state.username,\n//             email: this.state.email,\n//             password: this.state.password,\n//             //restaurantname: \"N/A\",\n//             zipcode: \"N/A\",\n//             owner: false\n//         }\n\n//         const ownerData = {\n//             name: this.state.username,\n//             email: this.state.email,\n//             password: this.state.password,\n//             //restaurantname: this.state.restaurantname,\n//             zipcode: this.state.zipcode,\n//             owner: true\n//         }\n//         console.log(ownerData);\n//         if (!this.state.owner) {   \n//                 this.props.userSignup(buyerData);          \n//         } else {\n//                 this.props.userSignup(ownerData);   \n//         }\n\n//     }\n//     login = (e) => {\n//         e.preventDefault();\n//         const {history} = this.props;\n//         history.push('/login'); \n//     }\n//     //switch between user and owner sign up form\n//     switchForm = (e) => {\n//         (!this.state.owner) ? this.setState({ owner: true }) : this.setState({ owner: false });\n//     }\n\n//     render() {\n        \n//         //localStorage.setItem(\"message\",this.props.user.message)\n//         let redirectHome = null;\n//         var ownerForm = null;\n//         var userForm = null;\n//         var accountType = \"Owner\";\n//         if(this.props.user.message === \"User Registration successful\"){\n//             redirectHome = <Redirect to=\"/Login\" />\n//             this.props.user.message = null;\n//         }\n//         else{\n//             redirectHome = <Redirect to=\"/Register\" />\n            \n           \n//         }\n        \n//         // if(this.state.message == \"User email already registered\"){\n//         //     alert(\"Email already exists\");\n//         // }\n//         if (this.state.owner) {\n//             ownerForm =\n           \n//             <div className=\"form-group\">\n//                 <div >\n//                 <form onSubmit={this.handleSubmit}>\n//                   <div className=\"form-group\">\n                      \n//                   Restaurant Name:  <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Restaurant Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n//                   ZipCode: <input type=\"text\" className=\"form-control\" name=\"zipcode\" onChange={this.handleChange} placeholder=\"Enter zip code\" pattern=\"^[0-9]{5,6}$\" required />\n//                   Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n\n//                   Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />\n//                   <Button className=\"btn btn-primary\" >Register</Button> &nbsp;\n                 \n//                   </div>\n                 \n                  \n                \n//                   </form>\n\n//                 </div>\n//                 </div>\n            \n//             accountType = \"User\";\n//         } else{\n//             userForm =\n//             <form onSubmit={this.handleSubmit}>\n//             <div className=\"form-group\">\n\n//             Name: <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Customer Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n//              Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n//                   Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />   \n//                   <Button className=\"btn btn-primary\" >Register</Button> &nbsp;\n                  \n//                   </div>\n                  \n                  \n        \n//         </form>\n//          accountType = \"Owner\";\n//         }\n       \n//         return (\n\n\n//             <div className =\"body-login\">\n//                 {redirectHome}\n           \n//             <div className=\"container\">\n//               <div className=\"login-form\">\n//                 <div className=\"main-div\">\n//                   <div className=\"panel\">\n//                   <h1>Let's get started.</h1>\n//                     <p>Please enter required details to register.</p>\n//                   </div>\n//                   {userForm}\n//                   {ownerForm}\n                \n//                   <Button onClick={this.switchForm}>Sign Up as {accountType}</Button>\n                 \n//                   <h4>Already have an account?<Button  color=\"link\" onClick={this.login}><h4>Login</h4></Button></h4>\n//                   <div  style={{color: \"#ff0000\"}}><h4>{this.props.user.message}</h4></div> \n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//         )\n//     }\n// }\n// Register.propTypes = {\n//     userSignup: PropTypes.func.isRequired,\n//     user: PropTypes.object.isRequired,\n   \n//   };\n  \n//   const mapStateToProps = (state) => {\n//     return {\n//       user: state.signup.user,\n//     };\n//   };\n  \n//   export default connect(mapStateToProps, { userSignup})(Register);"]},"metadata":{},"sourceType":"module"}