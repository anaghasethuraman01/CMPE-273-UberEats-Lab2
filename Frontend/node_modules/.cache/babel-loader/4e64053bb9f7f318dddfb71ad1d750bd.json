{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Input } from 'reactstrap';\nimport { Button } from 'react-bootstrap';\nimport backendServer from \"../../webConfig\";\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userLogin, restaurantLogin } from \"../../actions/loginActions\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.sendRestaurantAPI = data => {\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/restlogin`, data).then(res => {\n        console.log(res.data['result']);\n\n        if (res.data.message) {\n          this.setState({\n            message: res.data.message\n          });\n        } else {\n          var data1 = res.data['result'];\n          this.setState({\n            username: data1['username']\n          });\n          this.setState({\n            phone: data1['phone']\n          });\n          this.setState({\n            zipcode: data1['zipcode']\n          });\n          this.setState({\n            timing: data1['timing']\n          });\n          this.setState({\n            description: data1['description']\n          });\n          this.setState({\n            city: data1['city']\n          });\n          this.setState({\n            days: data1['days']\n          });\n          this.setState({\n            deliverytype: data1['deliverytype']\n          });\n          this.setState({\n            foodtype: data1['foodtype']\n          });\n          this.setState({\n            restaurantid: res.data['userid']\n          });\n          this.setState({\n            owner: data1['owner']\n          });\n          this.setState({\n            restprofilepic: data1['profilepic']\n          });\n          this.setState({\n            status: res.data['status']\n          });\n          console.log(this.state.restaurantid);\n          console.log(this.state.status);\n        }\n\n        console.log(\"Status Code : \", res.status);\n\n        if (res.status === 200) {\n          this.setState({\n            authFlag: true\n          });\n        } else {\n          this.setState({\n            authFlag: false\n          });\n        }\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // if (this.validateLogin() === true) {\n\n      const credential = {\n        email: this.state.email,\n        password: this.state.password,\n        usertype: this.state.usertype\n      };\n\n      if (credential.usertype === 'customer') {\n        // console.log(\"customer\")\n        this.props.userLogin(credential);\n      } else if (credential.usertype === 'restaurant') {\n        this.props.restaurantLogin(credential);\n      } else {\n        alert(\"Provide valid user type\");\n      } // }\n\n    };\n\n    this.register = e => {\n      e.preventDefault();\n      this.props.login.message = null;\n      const {\n        history\n      } = this.props;\n      history.push('/register');\n    };\n\n    this.state = {\n      message: null\n    }; // this.state = {\n    //     email: null,\n    //     password: null,\n    //     authFlag: false,\n    //     message:null,\n    //     phone:null,\n    //     username:null,\n    //     owner:null,\n    //     usertype:null,\n    //     restaurantname:null,\n    //     zipcode:null,\n    //     description:null,\n    //     timing:null,\n    //     userid:null,\n    //     restaurantid:null,\n    //     status:null,\n    //     city:null,\n    //     address:null,\n    //     deliverytype:null,\n    //     foodtype:null,\n    //     days:null,\n    //     profilepic:null,\n    //     restprofilepic:null,\n    // };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillMount() {}\n\n  render() {\n    let redirectVar = null;\n    let redirectHome = null;\n    let message = \"\";\n\n    if (cookie.load('cookie')) {\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 28\n        }\n      });\n    }\n\n    if (this.props.login) {\n      if (this.props.login.message === \"Customer Found\") {\n        redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/CustomerHome\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 32\n          }\n        });\n        localStorage.setItem(\"userid\", this.props.login.result.userid);\n        localStorage.setItem(\"username\", this.props.login.result.username);\n        this.props.login.message = null;\n        message = null;\n      } else if (this.props.login.message === \"Restaurant Found\") {\n        redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/RestaurantHome\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 32\n          }\n        });\n        this.props.login.message = null;\n        message = null;\n      }\n\n      if (this.props.login.message === \"Invalid credentials\" || this.props.login.message === \"Invalid user\") {\n        message = this.props.login.message;\n      }\n    } else {\n      message = \"\";\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 28\n        }\n      });\n    }\n\n    if (this.state.usertype === 'restaurant' && this.state.status === \"notfound\") {\n      localStorage.setItem(\"restaurantid\", this.state.restaurantid);\n      localStorage.setItem(\"email\", this.state.email);\n      localStorage.setItem(\"restaurantname\", this.state.username);\n      localStorage.setItem(\"phone\", \"Add\");\n      localStorage.setItem(\"zipcode\", this.state.zipcode);\n      localStorage.setItem(\"description\", \"Add\");\n      localStorage.setItem(\"timing\", \"Add\");\n      localStorage.setItem(\"city\", \"Add\");\n      localStorage.setItem(\"days\", \"Add\");\n      localStorage.setItem(\"deliverytype\", \"Add\");\n      localStorage.setItem(\"foodtype\", \"Add\");\n      localStorage.setItem(\"restprofilepic\", \"Add\");\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/RestaurantHome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 28\n        }\n      });\n    }\n\n    if (this.state.status === \"notfound\" && this.state.usertype === 'customer') {\n      localStorage.setItem(\"userid\", this.state.userid);\n      localStorage.setItem(\"email\", this.state.email);\n      localStorage.setItem(\"username\", this.state.username);\n      localStorage.setItem(\"phone\", \"Add\");\n      localStorage.setItem(\"dob\", \"Add\");\n      localStorage.setItem(\"about\", \"Add\");\n      localStorage.setItem(\"nickname\", \"Add\");\n      localStorage.setItem(\"address\", \"Add\");\n      localStorage.setItem(\"city\", \"Add\");\n      localStorage.setItem(\"state\", \"Add\");\n      localStorage.setItem(\"country\", \"Add\");\n      localStorage.setItem(\"profilepic\", \"Add\");\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/CustomerHome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 28\n        }\n      });\n    }\n\n    if (this.state.status === \"found\" && this.state.usertype === 'customer') {\n      localStorage.setItem(\"userid\", this.state.userid);\n      localStorage.setItem(\"email\", this.state.email);\n      localStorage.setItem(\"username\", this.state.username);\n      localStorage.setItem(\"phone\", this.state.phone);\n      localStorage.setItem(\"dob\", this.state.dob);\n      localStorage.setItem(\"about\", this.state.about);\n      localStorage.setItem(\"nickname\", this.state.nickname);\n      localStorage.setItem(\"city\", this.state.city);\n      localStorage.setItem(\"state\", this.state.state);\n      localStorage.setItem(\"country\", this.state.country);\n      localStorage.setItem(\"profilepic\", this.state.profilepic); //  const {history} = this.props;\n      // console.log(\"here\");\n      // history.push('/customerhome');\n\n      redirectVar = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/CustomerHome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 23\n        }\n      });\n    }\n\n    if (this.state.usertype === 'restaurant' && this.state.status === \"found\") {\n      localStorage.setItem(\"restaurantid\", this.state.restaurantid);\n      localStorage.setItem(\"email\", this.state.email);\n      localStorage.setItem(\"restaurantname\", this.state.username);\n      localStorage.setItem(\"phone\", this.state.phone);\n      localStorage.setItem(\"zipcode\", this.state.zipcode);\n      localStorage.setItem(\"description\", this.state.description);\n      localStorage.setItem(\"timing\", this.state.timing);\n      localStorage.setItem(\"city\", this.state.city);\n      localStorage.setItem(\"deliverytype\", this.state.deliverytype);\n      localStorage.setItem(\"foodtype\", this.state.foodtype);\n      localStorage.setItem(\"days\", this.state.days);\n      localStorage.setItem(\"restprofilepic\", this.state.restprofilepic); // const {history} = this.props;\n      // history.push('/restauranthome');\n\n      redirectVar = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/RestaurantHome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 23\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, redirectHome, redirectVar, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, \"Welcome to Uber Eats.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, \"Please enter your email and password.\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, \"Email :\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"email\",\n      onChange: this.handleChange,\n      placeholder: \"Email Id\",\n      pattern: \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\",\n      title: \"Please enter valid email address\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }), \"Password :\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      onChange: this.handleChange,\n      placeholder: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"usertype\",\n      name: \"usertype\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }, \"User type\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 25\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"restaurant\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 25\n      }\n    }, \"Restaurant\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 15\n      }\n    }, \"New to Uber Eats?\", /*#__PURE__*/React.createElement(Button, {\n      variant: \"link\",\n      onClick: this.register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 84\n      }\n    }, \"Create an account\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#ff0000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 48\n      }\n    }, message))))))) // </Col>\n    // </Row>\n    // </Container>\n    ;\n  }\n\n}\n\nLogin.propTypes = {\n  userLogin: PropTypes.func.isRequired,\n  restaurantLogin: PropTypes.func.isRequired,\n  login: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login.login\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userLogin,\n  restaurantLogin\n})(Login);","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Login/Login.js"],"names":["React","Component","Link","Redirect","axios","cookie","Input","Button","backendServer","validator","PropTypes","connect","userLogin","restaurantLogin","Login","constructor","props","handleChange","e","setState","target","name","value","sendRestaurantAPI","data","defaults","withCredentials","post","then","res","console","log","message","data1","username","phone","zipcode","timing","description","city","days","deliverytype","foodtype","restaurantid","owner","restprofilepic","status","state","authFlag","handleSubmit","preventDefault","credential","email","password","usertype","alert","register","login","history","push","bind","componentWillMount","render","redirectVar","redirectHome","load","localStorage","setItem","result","userid","dob","about","nickname","country","profilepic","color","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport {Input} from 'reactstrap';\nimport { Button } from 'react-bootstrap';\nimport backendServer from \"../../webConfig\";\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userLogin,restaurantLogin} from \"../../actions/loginActions\";\nclass Login extends Component {\n \n    constructor(props) {\n        super(props);\n        this.state= {\n            message : null\n        };\n        // this.state = {\n        //     email: null,\n        //     password: null,\n        //     authFlag: false,\n        //     message:null,\n        //     phone:null,\n        //     username:null,\n        //     owner:null,\n        //     usertype:null,\n        //     restaurantname:null,\n        //     zipcode:null,\n        //     description:null,\n        //     timing:null,\n        //     userid:null,\n        //     restaurantid:null,\n        //     status:null,\n        //     city:null,\n        //     address:null,\n        //     deliverytype:null,\n        //     foodtype:null,\n        //     days:null,\n        //     profilepic:null,\n        //     restprofilepic:null,\n        \n        // };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillMount() {\n    \n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    sendRestaurantAPI = (data) => {\n        axios.defaults.withCredentials = true;\n        axios.post(`${backendServer}/restlogin`, data)\n        \n            .then(res => {  \n                console.log(res.data['result']);\n                if(res.data.message){\n                    this.setState({ message: res.data.message });\n                } \n                else{  \n                    var data1 = res.data['result'];\n                    \n                    this.setState({username:data1['username']});\n                    this.setState({phone:data1['phone']});\n                    this.setState({ zipcode: data1['zipcode']})\n                    this.setState({ timing: data1['timing']})\n                    this.setState({ description:data1['description']})\n                    this.setState({ city: data1['city']})\n                    this.setState({ days: data1['days']})\n                    this.setState({ deliverytype:data1['deliverytype']})\n                    this.setState({ foodtype:data1['foodtype']})\n                    this.setState({restaurantid:res.data['userid']});\n                    this.setState({ owner:data1['owner']});\n                    this.setState({ restprofilepic:data1['profilepic']})\n                    \n                    this.setState({status:res.data['status']});\n                    console.log(this.state.restaurantid)\n                    console.log(this.state.status)\n                }\n                console.log(\"Status Code : \", res.status);\n                if (res.status === 200) {\n                    this.setState({ authFlag: true })\n                } else {\n                    this.setState({ authFlag: false })\n                }\n            });\n    }\n    // sendCustomerAPI = (data) => {\n    //     axios.defaults.withCredentials = true;\n    //     axios.post(`${backendServer}/custlogin`, data)\n    //         .then(res => {   \n    //             // console.log(\"in login\")\n    //             //  console.log(res.data)\n    //              if(res.data.message){\n    //                 //  console.log(\"mess\")\n    //                 this.setState({ message: res.data.message })\n    //             }else{\n    //                 //   console.log(\"here\")\n    //                 var data1 = res.data['result'];\n    //                 console.log(data1);\n    //                 this.setState({username:data1['username']});\n    //                 this.setState({dob:data1['dob']});\n    //                 this.setState({nickname:data1['nickname']});\n    //                 this.setState({phone:data1['phone']});\n    //                 this.setState({ state: data1['state']})\n    //                 this.setState({ city: data1['city']})\n    //                 this.setState({ address: data1['address']})\n    //                 this.setState({ country: data1['country']})\n    //                 this.setState({ about:data1['about']})\n    //                 this.setState({ owner:data1['owner']})\n    //                 this.setState({ profilepic:data1['profilepic']})\n    //                 this.setState({ userid:res.data['userid']});\n    //                 this.setState({status:res.data['status']});\n                    \n    //                 // console.log(this.state.restaurantid)\n    //                 // console.log(this.state.status)\n    //             }\n                \n    //             console.log(\"Status Code : \", res.status);\n    //             if (res.status === 200) {\n    //                 this.setState({ authFlag: true })\n    //             } else {\n    //                 this.setState({ authFlag: false })\n    //             }\n    //         });\n    // }\n  \n    handleSubmit = (e) => {\n        e.preventDefault();\n        // if (this.validateLogin() === true) {\n        const credential = {\n            email: this.state.email,\n            password: this.state.password,\n            usertype:this.state.usertype\n        }\n        \n        if(credential.usertype === 'customer'){\n            // console.log(\"customer\")\n            this.props.userLogin(credential);\n        }else if(credential.usertype === 'restaurant'){\n            this.props.restaurantLogin(credential);\n            \n        }else{\n            alert(\"Provide valid user type\");\n        }\n       // }\n        \n    }\n    register = (e) => {\n        e.preventDefault();\n        this.props.login.message = null;\n        const {history} = this.props;\n        history.push('/register'); \n    }\n    render() {\n        let redirectVar = null;\n        let redirectHome = null;\n        let message = \"\"\n        if (cookie.load('cookie')) { \n            redirectHome = <Redirect to=\"/\" />\n           \n\n        }\n        if(this.props.login){\n            \n            if(this.props.login.message === \"Customer Found\"){\n                redirectHome = <Redirect to=\"/CustomerHome\" />\n                localStorage.setItem(\"userid\",this.props.login.result.userid)\n                localStorage.setItem(\"username\",this.props.login.result.username)\n                this.props.login.message = null;\n                message = null;\n            }else if(this.props.login.message === \"Restaurant Found\"){\n                redirectHome = <Redirect to=\"/RestaurantHome\" />\n                this.props.login.message = null;\n                message = null;\n            }\n            if(this.props.login.message === \"Invalid credentials\" ||this.props.login.message === \"Invalid user\" ){\n                message = this.props.login.message;\n            }\n        }\n       else{\n            message = \"\";\n            redirectHome = <Redirect to=\"/Login\" />\n        }\n       \n        if(this.state.usertype === 'restaurant' && this.state.status===\"notfound\"){\n            localStorage.setItem(\"restaurantid\",this.state.restaurantid);\n            localStorage.setItem(\"email\",this.state.email);\n            localStorage.setItem(\"restaurantname\",this.state.username);\n            localStorage.setItem(\"phone\",\"Add\");\n            localStorage.setItem(\"zipcode\",this.state.zipcode);\n            localStorage.setItem(\"description\",\"Add\");\n            localStorage.setItem(\"timing\",\"Add\");\n            localStorage.setItem(\"city\",\"Add\");\n            localStorage.setItem(\"days\",\"Add\");\n            localStorage.setItem(\"deliverytype\",\"Add\");\n            localStorage.setItem(\"foodtype\",\"Add\");\n            localStorage.setItem(\"restprofilepic\",\"Add\");\n           \n            redirectHome = <Redirect to=\"/RestaurantHome\" />\n        }\n\n        if( this.state.status===\"notfound\" && this.state.usertype === 'customer'){\n        localStorage.setItem(\"userid\",this.state.userid);\n        localStorage.setItem(\"email\",this.state.email);\n        localStorage.setItem(\"username\",this.state.username);\n        localStorage.setItem(\"phone\",\"Add\");\n        localStorage.setItem(\"dob\",\"Add\");\n        localStorage.setItem(\"about\",\"Add\");\n        localStorage.setItem(\"nickname\",\"Add\");\n        localStorage.setItem(\"address\",\"Add\");\n        localStorage.setItem(\"city\",\"Add\");\n        localStorage.setItem(\"state\",\"Add\");\n        localStorage.setItem(\"country\",\"Add\");\n        localStorage.setItem(\"profilepic\",\"Add\");\n            redirectHome = <Redirect to=\"/CustomerHome\" />\n        }\n        \n       if( this.state.status===\"found\" && this.state.usertype === 'customer' ){\n        localStorage.setItem(\"userid\",this.state.userid);\n        localStorage.setItem(\"email\",this.state.email);\n        localStorage.setItem(\"username\",this.state.username);\n        localStorage.setItem(\"phone\",this.state.phone);\n        localStorage.setItem(\"dob\",this.state.dob);\n        localStorage.setItem(\"about\",this.state.about);\n        localStorage.setItem(\"nickname\",this.state.nickname);\n        localStorage.setItem(\"city\",this.state.city);\n        localStorage.setItem(\"state\",this.state.state);\n        localStorage.setItem(\"country\",this.state.country);\n        localStorage.setItem(\"profilepic\",this.state.profilepic);\n        //  const {history} = this.props;\n        // console.log(\"here\");\n        // history.push('/customerhome');\n        redirectVar = <Redirect to=\"/CustomerHome\" />;\n         \n       }\n       if(this.state.usertype === 'restaurant' && this.state.status===\"found\"){\n       \n        localStorage.setItem(\"restaurantid\",this.state.restaurantid);\n        localStorage.setItem(\"email\",this.state.email);\n        localStorage.setItem(\"restaurantname\",this.state.username);\n        localStorage.setItem(\"phone\",this.state.phone);\n        localStorage.setItem(\"zipcode\",this.state.zipcode);\n        localStorage.setItem(\"description\",this.state.description);\n        localStorage.setItem(\"timing\",this.state.timing);\n        localStorage.setItem(\"city\",this.state.city);\n        localStorage.setItem(\"deliverytype\",this.state.deliverytype);\n        localStorage.setItem(\"foodtype\",this.state.foodtype);\n        localStorage.setItem(\"days\",this.state.days);\n        localStorage.setItem(\"restprofilepic\",this.state.restprofilepic);\n        // const {history} = this.props;\n        // history.push('/restauranthome');\n        redirectVar = <Redirect to=\"/RestaurantHome\" />;\n        \n       }\n\n        return (\n            \n            \n            <div className =\"body-login\">{redirectHome}\n                {redirectVar}\n\n            <div className=\"container\">\n            <div className=\"login-form\">\n            <div className=\"main-div\">\n            <div className=\"panel\">\n                <h1>Welcome to Uber Eats.</h1>\n                <p>Please enter your email and password.</p>\n            </div >\n            <form onSubmit={this.handleSubmit}>\n              Email :\n            <input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                onChange={this.handleChange}\n                placeholder=\"Email Id\"\n                pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\"\n                title=\"Please enter valid email address\"\n                required\n              />\n              Password : \n              <input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                onChange={this.handleChange}\n                placeholder=\"Password\"\n                required\n              />\n            <div className=\"form-group\">\n              <select className=\"usertype\" name=\"usertype\" value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"\">User type</option>\n                        <option value=\"customer\">Customer</option>\n                        <option value=\"restaurant\">Restaurant</option>\n                    </select>\n                  </div> \n             \n              <br />\n              <button type=\"submit\" className=\"btn btn-primary\">\n              Login\n              </button>\n              <h4>New to Uber Eats?<Button  variant=\"link\" onClick={this.register}><h4>Create an account</h4></Button></h4>\n              <div  style={{color: \"#ff0000\"}}><h4>{message}</h4></div> \n              </form>\n            </div>\n          </div>\n        </div>\n        </div>\n        \n        // </Col>\n        // </Row>\n        // </Container>\n        )\n    }\n}\n\nLogin.propTypes = {\n    userLogin: PropTypes.func.isRequired,\n    restaurantLogin: PropTypes.func.isRequired,\n    login: PropTypes.object.isRequired,\n  };\n  \n  const mapStateToProps = (state) => {\n    return {\n      login: state.login.login,\n    };\n  };\n  export default connect(mapStateToProps, {userLogin,restaurantLogin})(Login);"]},"metadata":{},"sourceType":"module"}