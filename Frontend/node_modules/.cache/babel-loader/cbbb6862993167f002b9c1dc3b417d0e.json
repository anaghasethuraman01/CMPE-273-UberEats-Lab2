{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab2/Frontend/src/components/Dashboard/Checkout.js\";\nimport React, { Component } from 'react'; // import cookie from 'react-cookies';\n\nimport { Button, Input } from 'reactstrap';\nimport { Modal, Form } from 'react-bootstrap';\nimport backendServer from \"../../webConfig\";\nimport axios from 'axios';\nimport { CountryDropdown } from 'react-country-region-selector';\n\nclass CheckOut extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goback = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/restauranthome');\n    };\n\n    this.addToOrders = data => {\n      axios.post(`${backendServer}/placeorder`, data).then(res => {}).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.goback = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/customerhome');\n    };\n\n    this.placeOrder = e => {\n      e.preventDefault();\n      let restaurantid;\n      let street;\n      let city;\n      let customerid;\n      let state;\n      let country;\n      let dishid;\n\n      if (this.state.selectedAddr == null || this.state.selectedAddr == undefined) {\n        alert('Please select a delivery address option!');\n      } else {\n        //console.log(this.state.selectedAddr)\n        if (this.state.selectedAddr != \"new\") {\n          const addrObj = JSON.parse(this.state.selectedAddr);\n          street = addrObj.address;\n          city = addrObj.city;\n          state = addrObj.state;\n          country = addrObj.country;\n        } else {\n          street = this.state.street;\n          city = this.state.city;\n          state = this.state.state;\n          country = this.state.country;\n\n          if (city == null || state == null || country == null || street == null) {\n            alert(\"Address fields cannot be empty\");\n            return;\n          }\n        }\n\n        const orderDetails = [];\n        this.state.dishes.forEach(element => {\n          orderDetails.push({\n            dishid: element.dishid,\n            quantity: element.quantity,\n            price: element.dishprice,\n            dishname: element.dishname\n          });\n        }); // console.log(this.state.totalorderquantity);\n        // console.log(this.state.totalorderprice);\n\n        const orderData = {\n          customerid: this.state.customerid,\n          restaurantid: this.state.restaurantid,\n          restaurantname: this.state.restaurantname,\n          customername: this.state.customername,\n          street: street,\n          city: city,\n          state: state,\n          country: country,\n          ordertype: this.state.ordertype,\n          totalorderquantity: this.state.totalorderquantity,\n          totalorderprice: this.state.totalorderprice,\n          datetime: this.state.dateandtime.substring(0, 24),\n          orderDetails\n        };\n        console.log(\"****\");\n        console.log(orderData);\n        this.addToOrders(orderData);\n        this.setState({\n          show: true\n        });\n      }\n    };\n\n    this.handleChangeAddress = e => {\n      this.setState({\n        selectedAddr: e.target.value\n      });\n\n      if (e.target.value === 'new') {\n        this.setState({\n          showDiv: true\n        });\n      } else {\n        this.setState({\n          showDiv: false\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      status: null,\n      addressstatus: null,\n      dishes: [],\n      customerid: localStorage.getItem(\"userid\"),\n      restaurantid: localStorage.getItem(\"restid\"),\n      restaurantname: localStorage.getItem(\"restname\"),\n      customername: localStorage.getItem(\"username\"),\n      dishid: null,\n      deliveryaddress: [],\n      orderadd: null,\n      showDiv: false,\n      street: null,\n      state: null,\n      city: null,\n      country: null,\n      dateandtime: Date().toLocaleString(),\n      selectedAddr: null,\n      errorMsg: null,\n      ordertype: localStorage.getItem(\"DeliveryType\"),\n      totalorderquantity: null,\n      totalorderprice: null,\n      show: false\n    };\n  }\n\n  componentDidMount() {\n    const data = {\n      customerid: this.state.customerid //restaurantid: this.state.restaurantid\n\n    };\n    axios.post(`${backendServer}/getorderaddress`, data).then(response => {\n      console.log(response.data);\n\n      if (response.data.length > 0) {\n        this.setState({\n          addressstatus: \"datapresent\"\n        });\n      } else {\n        this.setState({\n          addressstatus: \"nodata\"\n        });\n      }\n\n      this.setState({\n        deliveryaddress: this.state.deliveryaddress.concat(response.data)\n      });\n    });\n    axios.post(`${backendServer}/getcartitem`, data).then(response => {\n      // console.log(response.data);\n      if (response.data.length > 0) {\n        this.setState({\n          status: \"datapresent\"\n        });\n      } else {\n        this.setState({\n          status: \"nodata\"\n        });\n      }\n\n      this.setState({\n        dishes: this.state.dishes.concat(response.data)\n      });\n      this.state.dishes.forEach(element => {\n        // console.log(\"**************\");\n        // console.log(element.quantity);\n        // console.log(element.quantityprice);\n        this.setState({\n          totalorderquantity: this.state.totalorderquantity + element.quantity\n        });\n        this.setState({\n          totalorderquantity: this.state.totalorderquantity + element.quantity\n        });\n        this.state.totalorderquantity = this.state.totalorderquantity + element.quantity;\n        this.state.totalorderprice = this.state.totalorderprice + element.quantityprice;\n      });\n      this.setState({\n        totalorderquantity: this.state.totalorderquantity\n      });\n      this.setState({\n        totalorderprice: this.state.totalorderprice.toFixed(2)\n      });\n    });\n  }\n\n  handleModalClose() {\n    this.setState({\n      show: !this.state.show\n    });\n    const {\n      history\n    } = this.props;\n    history.push('/customerhome');\n  }\n\n  selectCountry(val) {\n    this.setState({\n      country: val\n    });\n  }\n\n  render() {\n    var addresses = null;\n    var addnewaddress = null;\n    var cartitems = null;\n\n    if (this.state.showDiv) {\n      addnewaddress = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 14\n        }\n      }, \"Apt and Street No: \", /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        className: \"form-control-add\",\n        name: \"street\",\n        defaultValue: this.state.street,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 34\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }\n      }, \"City: \", /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        className: \"form-control-add\",\n        name: \"city\",\n        defaultValue: this.state.city,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 14\n        }\n      }, \"State: \", /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        className: \"form-control-add\",\n        name: \"state\",\n        defaultValue: this.state.state,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 22\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(CountryDropdown, {\n        className: \"form-control\",\n        value: this.state.country,\n        onChange: val => this.selectCountry(val),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      })));\n    }\n\n    if (this.state.addressstatus === \"datapresent\") {\n      addresses = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      }, this.state.deliveryaddress.map(deliveryadd => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        inline: true,\n        value: JSON.stringify(deliveryadd),\n        label: `${deliveryadd.address},${deliveryadd.city},${deliveryadd.state},${deliveryadd.country}`,\n        name: \"address\",\n        type: \"radio\",\n        id: deliveryadd,\n        onChange: this.handleChangeAddress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      })))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 7\n      }\n    }, \"Your items\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 10\n      }\n    }, this.state.dishes.map(dish => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cartitems\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 15\n      }\n    }, dish.dishname), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cartitem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }, \"$\", dish.dishprice), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cartitem\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, \"Qty :\", dish.quantity)))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }\n    }, \"Total : $\", this.state.totalorderprice), \"Total No of Items : \", this.state.totalorderquantity, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, \"Select a delivery address\"), addresses, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      value: \"new\",\n      label: \"Add new delivery address\",\n      name: \"address\",\n      type: \"radio\",\n      id: \"new\",\n      onChange: this.handleChangeAddress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }\n    })), addnewaddress, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.placeOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 8\n      }\n    }, \"Place Order\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.goback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 8\n      }\n    }, \"Home Page\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.show,\n      onHide: () => this.handleModalClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 15\n      }\n    }, \"Order Successfully Placed ! Thank you\")))));\n  }\n\n}\n\nexport default CheckOut;","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab2/Frontend/src/components/Dashboard/Checkout.js"],"names":["React","Component","Button","Input","Modal","Form","backendServer","axios","CountryDropdown","CheckOut","constructor","props","goback","e","preventDefault","history","push","addToOrders","data","post","then","res","catch","error","console","log","placeOrder","restaurantid","street","city","customerid","state","country","dishid","selectedAddr","undefined","alert","addrObj","JSON","parse","address","orderDetails","dishes","forEach","element","quantity","price","dishprice","dishname","orderData","restaurantname","customername","ordertype","totalorderquantity","totalorderprice","datetime","dateandtime","substring","setState","show","handleChangeAddress","target","value","showDiv","handleChange","name","status","addressstatus","localStorage","getItem","deliveryaddress","orderadd","Date","toLocaleString","errorMsg","componentDidMount","response","length","concat","quantityprice","toFixed","handleModalClose","selectCountry","val","render","addresses","addnewaddress","cartitems","map","deliveryadd","stringify","dish"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\n// import cookie from 'react-cookies';\nimport { Button,Input} from 'reactstrap';\nimport {Modal, Form} from 'react-bootstrap';\nimport backendServer from \"../../webConfig\";\nimport axios from 'axios';\nimport { CountryDropdown } from 'react-country-region-selector';\nclass CheckOut extends Component {\n    \n    constructor(props){\n        super(props);\n  \n        this.state = {\n          status : null,\n          addressstatus:null,\n          dishes:[],\n          customerid:localStorage.getItem(\"userid\"),\n          restaurantid:localStorage.getItem(\"restid\"),\n          restaurantname : localStorage.getItem(\"restname\"),\n          customername:localStorage.getItem(\"username\"),\n          dishid:null,\n          deliveryaddress: [],\n          orderadd:null,\n          showDiv:false,\n          street:null,\n          state:null,\n          city:null,\n          country:null,\n          dateandtime:Date().toLocaleString(),\n          selectedAddr: null,\n          errorMsg: null,\n          ordertype: localStorage.getItem(\"DeliveryType\"),\n          totalorderquantity:null,\n          totalorderprice:null,\n          show: false,\n          \n        }\n\n      }\n      componentDidMount(){\n        const data = {\n          customerid:this.state.customerid,\n          //restaurantid: this.state.restaurantid\n        };\n        axios.post(`${backendServer}/getorderaddress`,data)\n                .then((response) => { \n                  console.log(response.data);\n\n                 if(response.data.length > 0){\n                   this.setState({ addressstatus : \"datapresent\"});\n                 }\n                 else {\n                   this.setState({ addressstatus : \"nodata\"});\n                 }\n                this.setState({\n                  deliveryaddress : this.state.deliveryaddress.concat(response.data) \n                });\n            });\n         axios.post(`${backendServer}/getcartitem`,data)\n                .then((response) => { \n                 // console.log(response.data);\n                 if(response.data.length > 0){\n                   this.setState({ status : \"datapresent\"});\n                 }\n                 else {\n                   this.setState({ status : \"nodata\"});\n                 }\n                this.setState({\n                  dishes : this.state.dishes.concat(response.data) \n                });\n                this.state.dishes.forEach((element) => {\n                  // console.log(\"**************\");\n                  // console.log(element.quantity);\n                  // console.log(element.quantityprice);\n\n                  this.setState({\n                    totalorderquantity : this.state.totalorderquantity + element.quantity\n                  })\n                  this.setState({\n                    totalorderquantity : this.state.totalorderquantity + element.quantity\n                  })\n\n                  this.state.totalorderquantity = this.state.totalorderquantity + element.quantity;\n                  this.state.totalorderprice = this.state.totalorderprice + element.quantityprice;\n                });\n                this.setState({\n                  totalorderquantity : this.state.totalorderquantity \n                });\n                this.setState({\n                  totalorderprice : this.state.totalorderprice.toFixed(2) \n                });\n                });\n      }\n     \n      goback = (e) =>{\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/restauranthome'); \n      }\n\n\n   addToOrders = (data) => {\n        axios.post(`${backendServer}/placeorder`, data)\n            .then(res => {\n                \n            }).catch(\n                (error) => {\n                  console.log(error);\n                }\n            );\n    }\n      goback = (e) =>{\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/customerhome'); \n      }\n      placeOrder = (e) => {\n        e.preventDefault();\n        let restaurantid; let street; let city ; let customerid; let state; let country; let dishid;\n        if (this.state.selectedAddr == null || this.state.selectedAddr == undefined) {\n          alert( 'Please select a delivery address option!')\n        }else{\n        \n        //console.log(this.state.selectedAddr)\n        if(this.state.selectedAddr!=\"new\"){\n          const addrObj = JSON.parse(this.state.selectedAddr);\n          street = addrObj.address;\n          city = addrObj.city;\n          state =addrObj.state;\n          country = addrObj.country;\n        }else{\n          street = this.state.street;\n          city = this.state.city;\n          state =this.state.state;\n          country = this.state.country;\n          if(city == null || state == null || country == null || street == null){\n            alert(\"Address fields cannot be empty\");\n            return;\n          }\n\n        }\n        const orderDetails = []; \n        this.state.dishes.forEach((element) => {\n          orderDetails.push({ dishid: element.dishid, quantity: element.quantity,price : element.dishprice,dishname:element.dishname });  \n        });\n        \n       \n        // console.log(this.state.totalorderquantity);\n        // console.log(this.state.totalorderprice);\n        const orderData = {\n          customerid:this.state.customerid,\n          restaurantid:this.state.restaurantid,\n          restaurantname:this.state.restaurantname,\n          customername:this.state.customername,\n          street:street,\n          city:city,\n          state:state,\n          country:country,\n          ordertype:this.state.ordertype,\n          totalorderquantity:this.state.totalorderquantity,\n          totalorderprice:this.state.totalorderprice,\n          datetime:this.state.dateandtime.substring(0,24),\n          orderDetails\n        }\n        console.log(\"****\");\n        console.log(orderData);\n        this.addToOrders(orderData); \n        this.setState({\n          show : true \n        });\n       \n      }\n      }\n       handleModalClose(){\n      this.setState({show:!this.state.show}) \n       const {history} = this.props;\n        history.push('/customerhome'); \n        }\n      handleChangeAddress = (e) => {\n      this.setState({\n        selectedAddr: e.target.value,\n      }); \n\n        \n      if (e.target.value === 'new') {\n        this.setState({ showDiv: true });\n      } else {\n        this.setState({ showDiv: false });\n      }\n  }\n  handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        }\n        selectCountry (val) {\n      this.setState({ country: val });\n    }\n      render(){\n        var addresses = null;\n        var addnewaddress = null;\n        var cartitems = null;\n       \n\n       if(this.state.showDiv){\n         addnewaddress = (\n           <div>\n             <div className=\"form-group\">\n              Apt and Street No: <Input type=\"text\" className=\"form-control-add\" name=\"street\" defaultValue={this.state.street} onChange={this.handleChange} ></Input>\n              </div>\n              <div className=\"form-group\">\n              City: <Input type=\"text\" className=\"form-control-add\" name=\"city\" defaultValue={this.state.city} onChange={this.handleChange} ></Input>\n              </div>\n             <div className=\"form-group\">\n              State: <Input type=\"text\" className=\"form-control-add\" name=\"state\" defaultValue={this.state.state} onChange={this.handleChange} ></Input>\n              </div>\n             \n              <div className=\"form-group\">\n\n              <CountryDropdown className=\"form-control\"\n                    value={this.state.country}\n                    onChange={(val) => this.selectCountry(val)} \n                  />\n              </div>\n           </div>\n         )\n       }\n        if(this.state.addressstatus === \"datapresent\"){\n\n          addresses = (\n            <div>\n              {this.state.deliveryaddress.map(deliveryadd=>\n              <div>\n              <Form.Group  >\n              <Form.Check inline value={JSON.stringify(deliveryadd)} label={`${deliveryadd.address},${deliveryadd.city},${deliveryadd.state},${deliveryadd.country}`}  name=\"address\" type=\"radio\" id={deliveryadd} onChange={this.handleChangeAddress} />\n              </Form.Group>\n\n              </div>\n              )}\n            </div>\n          )\n        }\n     \n    return (\n      \n\n      <div className=\"container\">\n      <h4>Your items</h4>\n         <div>\n              {this.state.dishes.map(dish=>\n              <div className=\"cartitems\">\n              <div >{dish.dishname}</div>\n                <div className=\"cartitem\">${dish.dishprice}</div>\n                <div className=\"cartitem\">Qty :{dish.quantity}</div>\n              </div>\n              )}\n              \n          </div>\n       \n        <br/>\n        <h2>Total : ${this.state.totalorderprice}</h2>\n        Total No of Items : {this.state.totalorderquantity}\n        <br/>\n        <br/>\n        <h4>Select a delivery address</h4>\n       {addresses}\n       <Form.Group  >\n          <Form.Check inline value=\"new\" label=\"Add new delivery address\"  name=\"address\" type=\"radio\" id=\"new\" onChange={this.handleChangeAddress} />\n        </Form.Group>\n\n      {addnewaddress}\n       \n       <br/>\n       <Button onClick={this.placeOrder}>Place Order</Button>\n       <br/>\n       <br/>\n       <Button onClick={this.goback}>Home Page</Button>\n     \n      <div>\n         <Modal size=\"md-down\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n           show={this.state.show} onHide={()=>this.handleModalClose()}>\n             <Modal.Header closeButton></Modal.Header>\n             <Modal.Body>\n              <h1>Order Successfully Placed ! Thank you</h1>\n             </Modal.Body>\n            \n           </Modal>\n      </div>\n      </div>\n    )\n    }\n   \n}\n \nexport default CheckOut;"]},"metadata":{},"sourceType":"module"}