{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux/Frontend/src/components/Dashboard/SingleRestDashboard.js\";\nimport React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport { Card, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Modal } from 'react-bootstrap'; //import { Link } from 'react-router-dom';\n\nimport ReactTooltip from 'react-tooltip';\nimport backendServer from \"../../webConfig\";\nimport { BiCartAlt } from 'react-icons/bi';\n\nclass SingleRestDashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goback = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/restdashboard');\n    };\n\n    this.gobackFav = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/favourites');\n    };\n\n    this.addtocart = (restid, dishid, dishname, dishprice) => {\n      const cartvalue = {\n        customerid: localStorage.getItem(\"userid\"),\n        //  restaurantname :localStorage.getItem(\"restname\"),\n        restaurantid: restid,\n        dishid: dishid,\n        dishname: dishname,\n        dishprice: dishprice,\n        quantity: this.state.quantity,\n        quantityprice: dishprice * this.state.quantity\n      };\n      console.log(cartvalue);\n      this.addToCart(cartvalue); //  this.setState({\n      //   show : true \n      // });\n    };\n\n    this.addToCart = data => {\n      //  localStorage.setItem(\"oldrest\",data.restaurantname)\n      localStorage.setItem(\"newrestid\", data.restaurantid);\n      localStorage.setItem(\"customerid\", data.customerid);\n      localStorage.setItem(\"dishid\", data.dishid);\n      localStorage.setItem(\"dishname\", data.dishname);\n      localStorage.setItem(\"dishprice\", data.dishprice);\n      localStorage.setItem(\"quantity\", data.quantity);\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/addtocarttable`, data).then(res => {\n        console.log(\"res.data\");\n        console.log(res.data);\n\n        if (res.data == \"Delete previous order\") {\n          this.setState({\n            show: \"true\"\n          });\n        }\n\n        if (res.data == \"Quantity updated\") {\n          this.setState({\n            showfav: \"true\"\n          });\n        }\n\n        console.log(\"Status Code : \", res.status);\n\n        if (res.status === 200) {\n          this.setState({\n            authFlag: true\n          });\n        } else {\n          this.setState({\n            authFlag: false\n          });\n        }\n      });\n    };\n\n    this.handleNewOrder = () => {\n      const data = {\n        customerid: localStorage.getItem(\"customerid\"),\n        restaurantid: localStorage.getItem(\"newrestid\"),\n        dishid: localStorage.getItem(\"dishid\"),\n        dishname: localStorage.getItem(\"dishname\"),\n        dishprice: localStorage.getItem(\"dishprice\")\n      };\n      localStorage.setItem(\"restname\", this.state.restaurantname);\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/handleneworder`, data).then(res => {\n        if (res.status === 200) {\n          this.setState({\n            authFlag: true\n          });\n        } else {\n          this.setState({\n            authFlag: false\n          });\n        }\n      });\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.state = {\n      show: true,\n      restname: localStorage.getItem(\"restname\"),\n      restaurantid: localStorage.getItem(\"restid\"),\n      restaurantname: null,\n      description: null,\n      restaurantname: null,\n      query: null,\n      dish: null,\n      status: \"notdone\",\n      dishes: [],\n      restaurants: [],\n      message: null,\n      newrestid: null,\n      customerid: null,\n      dishid: null,\n      dishname: null,\n      dishprice: null,\n      quantity: 1,\n      deliverytype: null,\n      quantityprice: null,\n      show: false,\n      showfav: false\n    };\n  }\n\n  handleModalClose() {\n    this.setState({\n      show: !this.state.show\n    });\n    const {\n      history\n    } = this.props;\n    history.push('/singlerestdashboard');\n  }\n\n  handleModalCloseFav() {\n    this.setState({\n      showfav: !this.state.showfav\n    }); // const {history} = this.props;\n    // history.push('/singlerestdashboard'); \n  }\n\n  componentDidMount() {\n    const restaurantid = {\n      restaurantid: this.state.restaurantid\n    };\n    axios.post(`${backendServer}/getrestaurantdishes`, restaurantid).then(response => {\n      //update the state with the response data\n      this.setState({\n        dishes: this.state.dishes.concat(response.data)\n      }); //console.log(this.state.dishes);\n    });\n    axios.post(`${backendServer}/getrestaurantdetails`, restaurantid).then(response => {\n      this.setState({\n        restaurants: this.state.restaurants.concat(response.data)\n      });\n      this.setState({\n        restaurantname: response.data[0].username\n      });\n      this.setState({\n        deliverytype: response.data[0].deliverytype\n      });\n      localStorage.setItem(\"DeliveryType\", this.state.deliverytype);\n    });\n  }\n\n  handleCheckout() {\n    //console.log(this.props);\n    const {\n      history\n    } = this.props;\n    history.push(\"/checkout\");\n  }\n\n  handleModalClose() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  render() {\n    var restaurantdetails = null;\n    var searchresults = null;\n    var messagebox = null;\n    searchresults = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, this.state.dishes.map(dish => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      style: {\n        width: '18rem',\n        height: '13rem'\n      },\n      variant: \"top\",\n      src: `${backendServer}/${dish.dishimage}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, dish.dishname)), /*#__PURE__*/React.createElement(ListGroup, {\n      className: \"list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, \"Contains : \", dish.ingrediants, \" \"), /*#__PURE__*/React.createElement(ListGroupItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, \"Price :  $ \", dish.price), /*#__PURE__*/React.createElement(ReactTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"cardbtn2\",\n      \"data-tip\": \"Add To Cart\",\n      onClick: () => {\n        this.addtocart(this.state.restaurantid, dish.dishid, dish.dishname, dish.price);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BiCartAlt, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    })))))));\n    restaurantdetails = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, this.state.restaurants.map(restaurant => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }, restaurant.description)));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, this.state.restaurantname), restaurantdetails, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.goback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }\n    }, \"Search Restaurants\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.gobackFav,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }\n    }, \"Favourites\")), searchresults, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.show,\n      onHide: () => this.handleModalClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 14\n      }\n    }, \"Create New Order\"), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 14\n      }\n    }, \"Your Order contain items from another restaurant.Create a new order to add items from \", this.state.restaurantname), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.handleNewOrder();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 16\n      }\n    }, \"New Order\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.showfav,\n      onHide: () => this.handleModalCloseFav(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 14\n      }\n    }, \"Item added to cart!\"))));\n  }\n\n}\n\nexport default SingleRestDashboard;","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux/Frontend/src/components/Dashboard/SingleRestDashboard.js"],"names":["React","Component","Button","Card","ListGroup","ListGroupItem","axios","Modal","ReactTooltip","backendServer","BiCartAlt","SingleRestDashboard","constructor","props","goback","e","preventDefault","history","push","gobackFav","addtocart","restid","dishid","dishname","dishprice","cartvalue","customerid","localStorage","getItem","restaurantid","quantity","state","quantityprice","console","log","addToCart","data","setItem","defaults","withCredentials","post","then","res","setState","show","showfav","status","authFlag","handleNewOrder","restaurantname","restname","description","query","dish","dishes","restaurants","message","newrestid","deliverytype","handleModalClose","handleModalCloseFav","componentDidMount","response","concat","username","handleCheckout","render","restaurantdetails","searchresults","messagebox","map","width","height","dishimage","ingrediants","price","restaurant"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Button } from 'reactstrap';\nimport {Card, ListGroup, ListGroupItem} from 'react-bootstrap';\nimport axios from 'axios';\nimport {Modal} from 'react-bootstrap';\n//import { Link } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport backendServer from \"../../webConfig\";\nimport {BiCartAlt} from 'react-icons/bi';\n\n\nclass SingleRestDashboard extends Component {\n    \n    constructor(props){\n        super(props);\n  \n        this.state = {\n          show: true,\n          restname:localStorage.getItem(\"restname\"),\n          restaurantid : localStorage.getItem(\"restid\"),\n          restaurantname:null,\n          description:null,\n          restaurantname:null,\n          query : null,\n          dish:null,\n          status:\"notdone\",\n          dishes :[],\n          restaurants:[],\n          message:null,\n          newrestid:null,\n          customerid : null,\n          dishid:null,\n          dishname:null,\n          dishprice:null,\n          quantity:1,\n          deliverytype:null,\n          quantityprice:null,\n          show:false,\n          showfav:false,\n          \n        }\n      \n      }\n      handleModalClose(){\n        this.setState({show:!this.state.show}) \n        const {history} = this.props;\n        history.push('/singlerestdashboard'); \n    }\n\n    handleModalCloseFav(){\n      this.setState({showfav:!this.state.showfav}) \n      // const {history} = this.props;\n      // history.push('/singlerestdashboard'); \n  }\n      componentDidMount(){\n        const restaurantid = {\n          restaurantid: this.state.restaurantid\n      };\n        axios.post(`${backendServer}/getrestaurantdishes`,restaurantid)\n                .then((response) => { \n                  \n                //update the state with the response data\n                this.setState({\n                  dishes : this.state.dishes.concat(response.data) \n                });\n               //console.log(this.state.dishes);\n            });\n\n            axios.post(`${backendServer}/getrestaurantdetails`,restaurantid)\n            .then((response) => { \n          \n            this.setState({\n              restaurants : this.state.restaurants.concat(response.data) \n            });\n           \n            this.setState({\n              restaurantname : response.data[0].username\n            });\n            this.setState({\n              deliverytype : response.data[0].deliverytype\n            });\n            localStorage.setItem(\"DeliveryType\",this.state.deliverytype);\n            \n        });    \n\n    }\n\n  handleCheckout(){\n      //console.log(this.props);\n      const {history} = this.props;\n\t\t  history.push(\"/checkout\");\n   }\n      goback = (e) =>{\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/restdashboard'); \n      }\n\n      gobackFav = (e) =>{\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/favourites'); \n      }\n    \n     addtocart = (restid,dishid,dishname,dishprice) =>{\n      \n       const cartvalue = {\n         customerid : localStorage.getItem(\"userid\"),\n        //  restaurantname :localStorage.getItem(\"restname\"),\n         restaurantid : restid,\n         dishid:dishid,\n         dishname:dishname,\n         dishprice:dishprice,\n         quantity:this.state.quantity,\n         quantityprice :(dishprice * this.state.quantity) \n       }\n       console.log(cartvalue)\n       this.addToCart(cartvalue);\n      //  this.setState({\n      //   show : true \n      // });\n     }\n        handleModalClose(){\n        this.setState({show:!this.state.show}) \n         }\n    addToCart = (data) => {\n      //  localStorage.setItem(\"oldrest\",data.restaurantname)\n       localStorage.setItem(\"newrestid\",data.restaurantid);\n       localStorage.setItem(\"customerid\",data.customerid);\n       localStorage.setItem(\"dishid\",data.dishid);\n       localStorage.setItem(\"dishname\",data.dishname);\n       localStorage.setItem(\"dishprice\",data.dishprice);\n       localStorage.setItem(\"quantity\",data.quantity);\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/addtocarttable`, data).then((res) => {\n        console.log(\"res.data\")\n        console.log(res.data)\n          if(res.data == \"Delete previous order\"){\n            this.setState({show:\"true\"})\n          }\n          if(res.data == \"Quantity updated\"){\n            this.setState({showfav:\"true\"})\n          }\n        \n          console.log(\"Status Code : \", res.status);\n          if (res.status === 200) {\n            this.setState({ authFlag: true });\n          } else {\n            this.setState({ authFlag: false });\n          }\n      });\n\t};\n  handleNewOrder = () => {\n    const data = {\n       customerid : localStorage.getItem(\"customerid\"),\n         restaurantid : localStorage.getItem(\"newrestid\"),\n         dishid:localStorage.getItem(\"dishid\"),\n         dishname:localStorage.getItem(\"dishname\"),\n         dishprice:localStorage.getItem(\"dishprice\"),   \n    }\n    localStorage.setItem(\"restname\",this.state.restaurantname);\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/handleneworder`, data).then((res) => {\n        \n          if (res.status === 200) {\n            this.setState({ authFlag: true });\n          } else {\n            this.setState({ authFlag: false });\n          }\n      });\n      this.setState({show:!this.state.show}) \n\t};\n    render(){\n      \n      var restaurantdetails = null;\n        var searchresults = null;\n      var messagebox = null;\n        searchresults = \n        <div className='card-list'>\n        {this.state.dishes.map(dish=>\n         <div >\n          <Card style={{ width: '18rem' }}>\n          <Card.Img style={{ width: '18rem',height:'13rem' }} variant=\"top\" src={`${backendServer}/${dish.dishimage}`} />\n          <Card.Body>\n          <Card.Title>{dish.dishname}</Card.Title>\n          </Card.Body>\n          \n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>Contains : {dish.ingrediants} </ListGroupItem>\n            <ListGroupItem>Price :  $ {dish.price}</ListGroupItem>\n           \t<ReactTooltip />\n            <Button className=\"cardbtn2\" data-tip=\"Add To Cart\"\n            onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.addtocart(this.state.restaurantid,dish.dishid,dish.dishname,dish.price);\n\t\t\t\t\t\t\t\t\t\t\t}}>\n              <BiCartAlt/></Button>\n          </ListGroup>\n          </Card>                           \n          </div>\n       \n       )\n       }\n\n     </div>\n        \n        restaurantdetails = \n        <div>\n        {this.state.restaurants.map(restaurant=>\n        <p>{restaurant.description}</p>\n\n       )\n       }\n        </div>\n   \n    return (\n      \n        <div class=\"container\">\n          \n            <h1>{this.state.restaurantname}</h1>\n            \n          {/* {messagebox} */}\n            {restaurantdetails}\n            <form>\n            <Button onClick = {this.goback}>Search Restaurants</Button>\n            <Button onClick = {this.gobackFav}>Favourites</Button>\n            </form>\n            {searchresults}\n            <div>\n            <Modal size=\"md-down\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n           show={this.state.show} onHide={()=>this.handleModalClose()} >\n             <Modal.Header closeButton>Create New Order</Modal.Header>\n             <Modal.Body>\n             Your Order contain items from another restaurant.Create a new\n             order to add items from {this.state.restaurantname}\n             </Modal.Body>\n             <Modal.Footer>\n               <Button \n               onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.handleNewOrder();\n\t\t\t\t\t\t\t\t\t\t\t}}>\n              New Order</Button>\n             </Modal.Footer>\n           </Modal>\n           </div>\n\n\n           <div>\n            <Modal size=\"md-down\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n           show={this.state.showfav} onHide={()=>this.handleModalCloseFav()} >\n             <Modal.Header closeButton></Modal.Header>\n             <Modal.Body>\n             Item added to cart!\n             </Modal.Body>\n             \n           </Modal>\n           </div>\n\n        </div>\n    )\n    }\n   \n}\n \nexport default SingleRestDashboard;"]},"metadata":{},"sourceType":"module"}