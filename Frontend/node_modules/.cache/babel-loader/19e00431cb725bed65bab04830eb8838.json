{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab2/Frontend/src/components/HomePage/CustomerHome.js\";\nimport React, { Component } from 'react';\nimport ReactTooltip from 'react-tooltip'; // import cookie from 'react-cookies';\n\nimport { Button } from 'reactstrap';\nimport axios from \"axios\";\nimport { Modal, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport backendServer from \"../../webConfig\";\nimport { BiCartAlt } from 'react-icons/bi';\nimport { IoIosRestaurant } from 'react-icons/io';\nimport { MdFavoriteBorder } from 'react-icons/md';\nimport { RiPhoneFill } from 'react-icons/ri';\nimport { IoMail } from 'react-icons/io5';\n\nclass CustomerHome extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addToFavourites = restid => {\n      this.setState({\n        show: true\n      });\n      const customerid = localStorage.getItem(\"userid\");\n      const favourites = {\n        customerid: customerid,\n        restid: restid\n      };\n      this.addToFavouritesTable(favourites); //this.componentDidMount();\n    };\n\n    this.addToFavouritesTable = data => {\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/addtofavourites`, data).then(res => {\n        console.log(\"Status Code : \", res.status);\n\n        if (res.status === 200) {\n          this.setState({\n            authFlag: true\n          });\n        } else {\n          this.setState({\n            authFlag: false\n          });\n        }\n      });\n    };\n\n    this.profile = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/customerprofile');\n    };\n\n    this.showfavourites = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/favourites');\n    };\n\n    this.findfood = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/restdashboard');\n    };\n\n    this.orders = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/customerorder');\n    };\n\n    this.navigatetorestaurant = (val1, val2) => {\n      console.log(val1);\n      console.log(val2); //  window.location.href='/SingleRestDashboard';\n\n      localStorage.setItem(\"restid\", val1);\n      localStorage.setItem(\"restname\", val2);\n      const {\n        history\n      } = this.props;\n      console.log(history);\n      history.push(\"/singlerestdashboard\");\n    };\n\n    this.addtocart = e => {\n      e.preventDefault(); // localStorage.setItem(\"userid\",\"\");\n      //window.localStorage.clear();\n\n      const {\n        history\n      } = this.props;\n      history.push('/addtocart');\n    };\n\n    this.state = {\n      customerid: localStorage.getItem(\"userid\"),\n      username: localStorage.getItem(\"username\"),\n      email: localStorage.getItem(\"email\"),\n      phone: localStorage.getItem(\"phone\"),\n      dob: localStorage.getItem(\"dob\"),\n      address: localStorage.getItem(\"address\"),\n      state: localStorage.getItem(\"state\"),\n      city: localStorage.getItem(\"city\"),\n      country: localStorage.getItem(\"country\"),\n      nickname: localStorage.getItem(\"nickname\"),\n      about: localStorage.getItem(\"about\"),\n      favourites: null,\n      loading: false,\n      output: null,\n      restaurants: [],\n      restaurants1: [],\n      favrestaurants: [],\n      show: false\n    };\n  }\n\n  componentDidMount() {\n    const city = this.state.city;\n    const customerid = this.state.customerid; // if(customerid){\n    //   const val = {\n    //     customerid:customerid\n    //   }\n    //   axios.post(`${backendServer}/getfavouriterestaurant`,val).then((response) => {\n    //     //this.setState({ status: \"notdone\" });\n    //     console.log(response.data.length);\n    //     if(response.data.length > 0){\n    //       this.setState({ favourites: \"found\" });\n    //     }\n    //     //update the state with the response data\n    //     this.setState({\n    //       favrestaurants: this.state.favrestaurants.concat(response.data),\n    //     });\n    //   });\n    // }\n    //console.log(city);\n\n    if (city !== \"null\" && city !== \"Add\") {\n      const data = {\n        city: city\n      };\n      axios.post(`${backendServer}/getrestaurantwithcity`, data).then(response => {\n        //this.setState({ status: \"notdone\" });\n        //console.log(response.data);\n        //update the state with the response data\n        this.setState({\n          restaurants: this.state.restaurants.concat(response.data)\n        });\n      });\n    }\n\n    if (city === \"null\" || city === \"Add\" || this.state.restaurants.length == 0) {\n      axios.get(`${backendServer}/getrestaurant`).then(response => {\n        //this.setState({ status: \"notdone\" });\n        //console.log(response.data);\n        //update the state with the response data\n        this.setState({\n          restaurants1: this.state.restaurants1.concat(response.data)\n        });\n      });\n    }\n  }\n\n  handleModalClose() {\n    this.setState({\n      show: !this.state.show\n    }); // const {history} = this.props;\n    // history.push('/customerhome'); \n  }\n\n  render() {\n    var beforeSearch = null;\n    var afterSearch = null;\n    var favouriterest = null; //console.log(\"city\",this.state.city)\n\n    if (this.state.city === \"null\" || this.state.city === \"Add\" || this.state.restaurants.length == 0) {\n      beforeSearch = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }\n      }, \"All Restaurants\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }, this.state.restaurants1.map(restaurant => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: \"18rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        style: {\n          width: \"18rem\",\n          height: '13rem'\n        },\n        variant: \"top\",\n        src: `${backendServer}/${restaurant.profilepic}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }\n      }, restaurant.username, \"   (\", restaurant.city, \")\"), /*#__PURE__*/React.createElement(ListGroup, {\n        className: \"list-group-flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(RiPhoneFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 66\n        }\n      }), \": \", restaurant.phone, \" \"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IoMail, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 66\n        }\n      }), restaurant.email), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btngrp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        \"data-tip\": \"Explore\",\n        className: \"cardbtn\",\n        onClick: () => {\n          this.navigatetorestaurant(restaurant.restaurantid, restaurant.username);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IoIosRestaurant, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(ReactTooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"cardbtn\",\n        \"data-tip\": \"Add To Favourites\",\n        onClick: () => {\n          this.addToFavourites(restaurant.restaurantid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(MdFavoriteBorder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 12\n        }\n      }))))))))));\n    } else {\n      afterSearch = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, \" Restaurants Near You\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }, this.state.restaurants.map(restaurant => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: \"18rem\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        style: {\n          width: \"18rem\",\n          height: \"13rem\"\n        },\n        variant: \"top\",\n        src: `${backendServer}/${restaurant.profilepic}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }\n      }, restaurant.username, \" (\", restaurant.city, \")\"), /*#__PURE__*/React.createElement(ListGroup, {\n        className: \"list-group-flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(RiPhoneFill, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 67\n        }\n      }), \": \", restaurant.phone, \" \"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        className: \"detailsincard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(IoMail, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 66\n        }\n      }), restaurant.email), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btngrp\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        \"data-tip\": \"Explore\",\n        className: \"cardbtn\",\n        onClick: () => {\n          this.navigatetorestaurant(restaurant.restaurantid, restaurant.username);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IoIosRestaurant, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(ReactTooltip, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"cardbtn\",\n        \"data-tip\": \"Add To Favourites\",\n        onClick: () => {\n          this.addToFavourites(restaurant.restaurantid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(MdFavoriteBorder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 12\n        }\n      }))))))))));\n    }\n\n    if (this.state.favourites == \"found\") {\n      favouriterest = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }\n      }, \"Your Favourites\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }\n      }, this.state.favrestaurants.map(restaurant => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        style: {\n          width: \"18rem\"\n        },\n        variant: \"top\",\n        src: `${backendServer}/${restaurant.profilepic}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 21\n        }\n      }, restaurant.username), /*#__PURE__*/React.createElement(ListGroup, {\n        className: \"list-group-flush\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(ListGroupItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 23\n        }\n      }, \" \", restaurant.phone, \" \"), /*#__PURE__*/React.createElement(ListGroupItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 23\n        }\n      }, \" \", restaurant.email), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          this.navigatetorestaurant(restaurant.restaurantid, restaurant.username);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 23\n        }\n      }, \"Explore\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"cardbtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(BiCartAlt, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 51\n        }\n      }))))))))));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }, \"Welcome \", this.state.username, \" !\"), /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn\",\n      onClick: this.profile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }\n    }, \"Profile\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn\",\n      onClick: this.findfood,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }\n    }, \"Find Food\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn\",\n      onClick: this.orders,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }\n    }, \"Orders\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn\",\n      onClick: this.showfavourites,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, \"Favourites\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.show,\n      onHide: () => this.handleModalClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, \"Added to Favourites!\"))))), beforeSearch, afterSearch);\n  }\n\n}\n\nexport default CustomerHome;","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab2/Frontend/src/components/HomePage/CustomerHome.js"],"names":["React","Component","ReactTooltip","Button","axios","Modal","Card","ListGroup","ListGroupItem","backendServer","BiCartAlt","IoIosRestaurant","MdFavoriteBorder","RiPhoneFill","IoMail","CustomerHome","constructor","props","addToFavourites","restid","setState","show","customerid","localStorage","getItem","favourites","addToFavouritesTable","data","defaults","withCredentials","post","then","res","console","log","status","authFlag","profile","e","preventDefault","history","push","showfavourites","findfood","orders","navigatetorestaurant","val1","val2","setItem","addtocart","state","username","email","phone","dob","address","city","country","nickname","about","loading","output","restaurants","restaurants1","favrestaurants","componentDidMount","response","concat","length","get","handleModalClose","render","beforeSearch","afterSearch","favouriterest","map","restaurant","width","height","profilepic","restaurantid"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ReactTooltip from 'react-tooltip';\n// import cookie from 'react-cookies';\nimport { Button } from 'reactstrap';\nimport axios from \"axios\";\nimport { Modal,Card, ListGroup, ListGroupItem} from \"react-bootstrap\";\nimport backendServer from \"../../webConfig\";\nimport {BiCartAlt} from 'react-icons/bi';\nimport {IoIosRestaurant} from 'react-icons/io';\nimport {MdFavoriteBorder} from 'react-icons/md';\nimport {RiPhoneFill} from 'react-icons/ri';\nimport {IoMail} from 'react-icons/io5';\n\n\nclass CustomerHome extends Component {\n    \n    constructor(props){\n        super(props);\n  \n        this.state = {\n            customerid : localStorage.getItem(\"userid\"),\n            username: localStorage.getItem(\"username\"),\n            email:localStorage.getItem(\"email\"),\n            phone: localStorage.getItem(\"phone\"),\n            dob:localStorage.getItem(\"dob\"),\n            address:localStorage.getItem(\"address\"),\n            state:localStorage.getItem(\"state\"),\n            city:localStorage.getItem(\"city\"),\n            country:localStorage.getItem(\"country\"),\n            nickname:localStorage.getItem(\"nickname\"),\n            about:localStorage.getItem(\"about\"),\n            favourites:null,\n            loading: false,\n            output: null,\n            restaurants: [],\n            restaurants1: [],\n            favrestaurants: [],\n            show:false\n          }\n      }\n    componentDidMount() {\n    const city = this.state.city;\n    const customerid = this.state.customerid;\n\n    // if(customerid){\n    //   const val = {\n    //     customerid:customerid\n    //   }\n     \n    //   axios.post(`${backendServer}/getfavouriterestaurant`,val).then((response) => {\n    //     //this.setState({ status: \"notdone\" });\n        \n    //     console.log(response.data.length);\n    //     if(response.data.length > 0){\n    //       this.setState({ favourites: \"found\" });\n    //     }\n    //     //update the state with the response data\n    //     this.setState({\n    //       favrestaurants: this.state.favrestaurants.concat(response.data),\n    //     });\n    //   });\n\n    // }\n    //console.log(city);\n    if(city!== \"null\" && city !== \"Add\" ){\n      const data = {\n\t\t\tcity: city,\n\t\t  };\n      axios.post(`${backendServer}/getrestaurantwithcity`,data).then((response) => {\n        //this.setState({ status: \"notdone\" });\n        //console.log(response.data);\n        //update the state with the response data\n        this.setState({\n          restaurants: this.state.restaurants.concat(response.data),\n        });\n       \n      });\n    } if(city === \"null\" || city === \"Add\" || this.state.restaurants.length == 0) {\n      \n      axios.get(`${backendServer}/getrestaurant`).then((response) => {\n\t\t\t//this.setState({ status: \"notdone\" });\n\t\t\t//console.log(response.data);\n\t\t\t//update the state with the response data\n\t\t\tthis.setState({\n\t\t\t\trestaurants1: this.state.restaurants1.concat(response.data),\n\t\t\t});\n\t\t});\n    }\n\n\t}\n  handleModalClose(){\n\t\tthis.setState({show:!this.state.show}) \n\t\t// const {history} = this.props;\n\t    // history.push('/customerhome'); \n\t}\n  addToFavourites = (restid) =>{\n    this.setState({\n\t\t\tshow : true \n\t\t  });\n\t\tconst customerid = localStorage.getItem(\"userid\");\t\n\t\tconst favourites = {\n\t\t\tcustomerid : customerid,\n\t\t\trestid:restid\t\n\t\t\t};\n\t\tthis.addToFavouritesTable(favourites);\t\n    //this.componentDidMount();\n\t}\n  \taddToFavouritesTable = (data) => {\n\t\taxios.defaults.withCredentials = true;\n\t\taxios.post(`${backendServer}/addtofavourites`, data).then((res) => {\n\t\t\tconsole.log(\"Status Code : \", res.status);\n\t\t\tif (res.status === 200) {\n\t\t\t\tthis.setState({ authFlag: true });\n\t\t\t} else {\n\t\t\t\tthis.setState({ authFlag: false });\n\t\t\t}\n\t\t});\n\t}\n      profile = e => {\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/customerprofile'); \n      }\n      showfavourites = e => {\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/favourites'); \n      }\n      findfood = e => {\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/restdashboard'); \n      }\n      orders = e => {\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/customerorder'); \n      }\n      navigatetorestaurant = (val1,val2) => {\n        console.log(val1);\n        console.log(val2);\n        //  window.location.href='/SingleRestDashboard';\n        localStorage.setItem(\"restid\", val1);\n        localStorage.setItem(\"restname\", val2);\n        const { history } = this.props;\n        console.log(history);\n        history.push(\"/singlerestdashboard\");\n\t    };\n      \n       addtocart = e => {\n        e.preventDefault();\n       // localStorage.setItem(\"userid\",\"\");\n      //window.localStorage.clear();\n        const {history} = this.props;\n        history.push('/addtocart'); \n      }\n    render(){\n      var beforeSearch = null;\n      var afterSearch = null;\n      var favouriterest = null;\n      //console.log(\"city\",this.state.city)\n      if(this.state.city === \"null\" || this.state.city === \"Add\" || this.state.restaurants.length == 0){\n          beforeSearch = ( \n          <div>\n            <br/>\n          <h1>All Restaurants</h1>\n          <div className=\"card-list\">\n          \n            {this.state.restaurants1.map((restaurant) => (\n              <div>\n                <Card style={{ width: \"18rem\" }}>\n                  <Card.Img\n                    style={{ width: \"18rem\" ,height:'13rem'}}\n                    variant=\"top\"\n                    src={`${backendServer}/${restaurant.profilepic}`}\n                  />\n                  <Card.Body>\n                    <Card.Title className = \"detailsincard\">{restaurant.username}   ({restaurant.city})</Card.Title>\n                    <ListGroup className=\"list-group-flush\">\n                      <ListGroupItem className = \"detailsincard\"><RiPhoneFill/>: {restaurant.phone} </ListGroupItem>\n                      <ListGroupItem className = \"detailsincard\"><IoMail/>{restaurant.email}</ListGroupItem>\n                      <div className=\"btngrp\">\n\t\t\t\t\t\t\t\t\t\t<Button data-tip=\"Explore\" className=\"cardbtn\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.navigatetorestaurant(restaurant.restaurantid,restaurant.username);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<IoIosRestaurant/>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip />\n\t\t\t\t\t\t\t\t\t\t\n                      <Button className=\"cardbtn\" data-tip=\"Add To Favourites\"\n\t\t\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.addToFavourites(restaurant.restaurantid);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<MdFavoriteBorder/></Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n                    </ListGroup>\n                   \n                  </Card.Body>\n                </Card>\n              </div>\n            ))}\n          </div>\n          </div>\n        );\n      }\n      else{\n        \n          afterSearch = (\n            <div>\n            <h1> Restaurants Near You</h1>\n            <div className=\"card-list\">\n            \n              {this.state.restaurants.map((restaurant) => (\n                <div >\n                  <Card style= {{ width: \"18rem\" }} >\n                    <Card.Img\n                      style={{ width: \"18rem\" ,height : \"13rem\"}}\n                      variant=\"top\"\n                      src={`${backendServer}/${restaurant.profilepic}`}\n                    />\n                    <Card.Body>\n                    <Card.Title className = \"detailsincard\">{restaurant.username} ({restaurant.city})</Card.Title>\n                    <ListGroup className=\"list-group-flush\">\n                       <ListGroupItem className = \"detailsincard\"><RiPhoneFill/>: {restaurant.phone} </ListGroupItem>\n                      <ListGroupItem className = \"detailsincard\"><IoMail/>{restaurant.email}</ListGroupItem>\n                      <div className=\"btngrp\">\n\t\t\t\t\t\t\t\t\t\t<Button data-tip=\"Explore\" className=\"cardbtn\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.navigatetorestaurant(restaurant.restaurantid,restaurant.username);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<IoIosRestaurant/>\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip />\n\t\t\t\t\t\t\t\t\t\t\n                      <Button className=\"cardbtn\" data-tip=\"Add To Favourites\"\n\t\t\t\t\t\t\t\t\t\t  onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.addToFavourites(restaurant.restaurantid);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<MdFavoriteBorder/></Button>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n                    </ListGroup>\n                   \n                  </Card.Body>\n                </Card>\n              </div>\n            ))}\n          </div>\n          </div>\n        );\n      }\n\n\n      if(this.state.favourites == \"found\"){\n         favouriterest = ( \n          <div>\n          <h1>Your Favourites</h1>\n          <div className=\"card-list\">\n          \n            {this.state.favrestaurants.map((restaurant) => (\n              <div>\n                <Card >\n                  <Card.Img\n                    style={{ width: \"18rem\" }}\n                    variant=\"top\"\n                    src={`${backendServer}/${restaurant.profilepic}`}\n                  />\n                  <Card.Body>\n                    <Card.Title>{restaurant.username}</Card.Title>\n                    <ListGroup className=\"list-group-flush\">\n                      <ListGroupItem> {restaurant.phone} </ListGroupItem>\n                      <ListGroupItem> {restaurant.email}</ListGroupItem>\n                      <div className =\"form-buttons\">\n                      <Button  \n                        onClick={() => {\n                          this.navigatetorestaurant(restaurant.restaurantid,restaurant.username);\n                        }}\n                      >\n                        Explore\n                      </Button>\n                      <Button className=\"cardbtn\"><BiCartAlt/></Button>\n                      </div>\n                    </ListGroup>\n                   \n                  </Card.Body>\n                </Card>\n              </div>\n            ))}\n          </div>\n          </div>\n        );\n      }\n     \n    return (\n      \n        <div className=\"container\">\n            {/* <Button className=\"btn-logout\" onClick={this.addtocart}>Cart</Button> */}\n            <form >\n            <h1>Welcome {this.state.username} !</h1>\n            <>\n      </>\n            <div className='form-buttons'>\n          \n            <Button className=\"btn\" onClick={this.profile}>Profile</Button>\n\n            <Button className=\"btn\" onClick={this.findfood}>Find Food</Button>\n\n            <Button className=\"btn\" onClick={this.orders}>Orders</Button>\n\n            <Button className=\"btn\" onClick={this.showfavourites}>Favourites</Button>\n\n            \n            </div>\n            <div>\n              <Modal size=\"md-down\"\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              centered\n              show={this.state.show} onHide={()=>this.handleModalClose()}>\n                <Modal.Header closeButton></Modal.Header>\n                <Modal.Body>\n                <p>Added to Favourites!</p>\n                </Modal.Body>\n                \n              </Modal>\n      \t\t\t</div>\n            </form>\n              \n              {beforeSearch}\n              {afterSearch}\n             \n        </div>\n      \n    )\n    }\n   \n}\n \nexport default CustomerHome;"]},"metadata":{},"sourceType":"module"}