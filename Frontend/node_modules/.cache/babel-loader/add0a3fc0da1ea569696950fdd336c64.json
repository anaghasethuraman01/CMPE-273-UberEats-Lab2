{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Register/Register.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Button, Input } from 'reactstrap';\nimport backendServer from \"../../webConfig\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userSignup } from \"../../actions/signupActions\";\nimport validator from 'validator';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(this.state);\n    };\n\n    this.sendRestAPI = data => {\n      // console.log(\"data\"+data)\n      axios.post(`${backendServer}/register`, data).then(res => {\n        if (res.data.message) {\n          this.setState({\n            message: res.data.message\n          });\n        } else {\n          this.setState({\n            message: res.data.username\n          });\n          this.setState({\n            username: res.data.username\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      const {\n        history\n      } = this.props;\n      history.push('/login');\n    };\n\n    this.validateCustRegister = () => {\n      let isValid = true;\n\n      if (this.state.name === null || this.state.email === null || this.state.password === null) {\n        alert(\"Fields cannot be empty\");\n        isValid = false;\n      } else {\n        if (!validator.isEmail(this.state.email)) {\n          alert('Enter valid Email!');\n          isValid = false;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const buyerData = {\n        name: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        //restaurantname: \"N/A\",\n        zipcode: \"N/A\",\n        owner: false\n      };\n      const restaurantData = {\n        name: this.state.username,\n        email: this.state.email,\n        password: this.state.password,\n        //restaurantname: \"N/A\",\n        zipcode: this.state.zipcode,\n        owner: true\n      };\n      console.log(\"Checking owner\");\n      console.log(this.state.owner);\n\n      if (!this.state.owner) {\n        if (this.validateCustRegister() === true) {\n          this.props.userSignup(buyerData);\n          this.setState({\n            signupFlag: 1\n          });\n        }\n      } else {\n        if (this.validateCustRegister() === true) {\n          this.props.restaurantSignup(restaurantData);\n          this.setState({\n            signupFlag: 1\n          });\n        }\n      }\n    };\n\n    this.switchForm = e => {\n      !this.state.owner ? this.setState({\n        owner: true\n      }) : this.setState({\n        owner: false\n      });\n    };\n\n    this.state = {// username: null,\n      // email: null,\n      // password: null,\n      // //restaurantname: null,\n      // zipcode: null,\n      // owner: false,\n      // message: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.switchForm = this.switchForm.bind(this);\n  }\n\n  render() {\n    var ownerForm = null;\n    var userForm = null;\n    var accountType = \"Owner\";\n\n    if (this.state.owner) {\n      ownerForm = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, \"Restaurant Name: \", /*#__PURE__*/React.createElement(Input, {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"username\",\n        maxlength: \"30\",\n        placeholder: \"Restaurant name\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 38\n        }\n      }), \"ZipCode: \", /*#__PURE__*/React.createElement(Input, {\n        className: \"form-control\",\n        type: \"number\",\n        name: \"zipcode\",\n        maxlength: \"5\",\n        placeholder: \"5 digits\",\n        value: this.state.zipcode,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 30\n        }\n      })));\n      accountType = \"User\";\n    } else {\n      userForm = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, \"Name:\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 18\n        }\n      }), \" \", /*#__PURE__*/React.createElement(Input, {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Your name\",\n        minlength: \"3\",\n        maxlength: \"30\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 24\n        }\n      }));\n      accountType = \"Owner\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, \"Let's get started.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, \"Please enter required details to register.\")), userForm, ownerForm, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 19\n      }\n    }, \"Email: \", /*#__PURE__*/React.createElement(Input, {\n      className: \"form-control\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"example@gmail.com\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, \"Password: \", /*#__PURE__*/React.createElement(Input, {\n      className: \"form-control\",\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"At least 6 characters\",\n      minlength: \"6\",\n      maxlength: \"16\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-primary\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, \"Register\"), \" \\xA0\", /*#__PURE__*/React.createElement(Button, {\n      onClick: this.switchForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, \"Sign Up as \", accountType)), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 48\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 83\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, \" \", this.state.message, \" \"))))) // <div class=\"container\">\n    //     <form onSubmit={this.handleSubmit}>\n    //     <h1>Let's get started</h1>\n    //     <div className='form-control'>\n    //         {userForm}\n    //         {ownerForm}\n    //         Email: <input type=\"email\" name=\"email\" placeholder=\"example@gmail.com\" value={this.state.email} onChange={this.handleChange} required></input><br />\n    //         Password: <input type=\"password\" name=\"password\" placeholder=\"At least 6 characters\" minlength=\"6\" maxlength=\"16\" id=\"password\" value={this.state.password} onChange={this.handleChange} required></input><br />\n    //         <div>\n    //         <Button>Register</Button> &nbsp;\n    //         <Button onClick={this.switchForm}>Sign Up as {accountType}</Button>\n    //         </div><br />\n    //         <div>Already have an account? <Link to=\"/login\">Login</Link></div><br />\n    //         <div> {this.state.message} </div>\n    //         </div>\n    //     </form>\n    // </div>\n    ;\n  }\n\n}\n\nRegister.propTypes = {\n  userSignup: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.signup.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userSignup\n})(Register); // import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n// import { Button ,Input} from 'reactstrap';\n// import { Redirect } from 'react-router';\n// import validator from 'validator';\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import { userSignup } from \"../../actions/signupActions\";\n// class Register extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {};\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//         this.switchForm = this.switchForm.bind(this);\n//     }\n//     handleChange = (e) => {\n//         e.preventDefault();\n//         this.setState({ [e.target.name]: e.target.value });\n//         console.log(this.state);\n//     }\n//     nullOrEmpty(str) {\n//         return str === null || str === \"\" \n//     }\n//     validateCustRegister = () => {\n//         let isValid = true;\n//         if(this.nullOrEmpty(this.state.username)  || this.nullOrEmpty(this.state.email) ||  this.nullOrEmpty(this.state.password)){\n//         alert(\"Fields cannot be empty\");\n//            isValid = false;\n//         }\n//         else{\n//             if (!validator.isEmail(this.state.email)) {\n//                 alert('Enter valid Email!')\n//                 isValid = false;\n//             }\n//             if(!this.state.username.match(/^[a-zA-Z ]+$/)){\n//                 alert(\"Name can contain only alphabets\")\n//                 isValid = false;\n//             }\n//         } \n//         return isValid;\n//      }\n//     handleSubmit = (e) => {\n//         e.preventDefault();\n//         const buyerData = {\n//             name: this.state.username,\n//             email: this.state.email,\n//             password: this.state.password,\n//             //restaurantname: \"N/A\",\n//             zipcode: \"N/A\",\n//             owner: false\n//         }\n//         const ownerData = {\n//             name: this.state.username,\n//             email: this.state.email,\n//             password: this.state.password,\n//             //restaurantname: this.state.restaurantname,\n//             zipcode: this.state.zipcode,\n//             owner: true\n//         }\n//         console.log(ownerData);\n//         if (!this.state.owner) {   \n//                 this.props.userSignup(buyerData);          \n//         } else {\n//                 this.props.userSignup(ownerData);   \n//         }\n//     }\n//     login = (e) => {\n//         e.preventDefault();\n//         const {history} = this.props;\n//         history.push('/login'); \n//     }\n//     //switch between user and owner sign up form\n//     switchForm = (e) => {\n//         (!this.state.owner) ? this.setState({ owner: true }) : this.setState({ owner: false });\n//     }\n//     render() {\n//         //localStorage.setItem(\"message\",this.props.user.message)\n//         let redirectHome = null;\n//         var ownerForm = null;\n//         var userForm = null;\n//         var accountType = \"Owner\";\n//         if(this.props.user.message === \"User Registration successful\"){\n//             redirectHome = <Redirect to=\"/Login\" />\n//             this.props.user.message = null;\n//         }\n//         else{\n//             redirectHome = <Redirect to=\"/Register\" />\n//         }\n//         // if(this.state.message == \"User email already registered\"){\n//         //     alert(\"Email already exists\");\n//         // }\n//         if (this.state.owner) {\n//             ownerForm =\n//             <div className=\"form-group\">\n//                 <div >\n//                 <form onSubmit={this.handleSubmit}>\n//                   <div className=\"form-group\">\n//                   Restaurant Name:  <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Restaurant Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n//                   ZipCode: <input type=\"text\" className=\"form-control\" name=\"zipcode\" onChange={this.handleChange} placeholder=\"Enter zip code\" pattern=\"^[0-9]{5,6}$\" required />\n//                   Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n//                   Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />\n//                   <Button className=\"btn btn-primary\" >Register</Button> &nbsp;\n//                   </div>\n//                   </form>\n//                 </div>\n//                 </div>\n//             accountType = \"User\";\n//         } else{\n//             userForm =\n//             <form onSubmit={this.handleSubmit}>\n//             <div className=\"form-group\">\n//             Name: <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Customer Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n//              Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n//                   Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />   \n//                   <Button className=\"btn btn-primary\" >Register</Button> &nbsp;\n//                   </div>\n//         </form>\n//          accountType = \"Owner\";\n//         }\n//         return (\n//             <div className =\"body-login\">\n//                 {redirectHome}\n//             <div className=\"container\">\n//               <div className=\"login-form\">\n//                 <div className=\"main-div\">\n//                   <div className=\"panel\">\n//                   <h1>Let's get started.</h1>\n//                     <p>Please enter required details to register.</p>\n//                   </div>\n//                   {userForm}\n//                   {ownerForm}\n//                   <Button onClick={this.switchForm}>Sign Up as {accountType}</Button>\n//                   <h4>Already have an account?<Button  color=\"link\" onClick={this.login}><h4>Login</h4></Button></h4>\n//                   <div  style={{color: \"#ff0000\"}}><h4>{this.props.user.message}</h4></div> \n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//         )\n//     }\n// }\n// Register.propTypes = {\n//     userSignup: PropTypes.func.isRequired,\n//     user: PropTypes.object.isRequired,\n//   };\n//   const mapStateToProps = (state) => {\n//     return {\n//       user: state.signup.user,\n//     };\n//   };\n//   export default connect(mapStateToProps, { userSignup})(Register);","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Register/Register.js"],"names":["React","Component","axios","Link","Button","Input","backendServer","PropTypes","connect","userSignup","validator","Register","constructor","props","handleChange","e","preventDefault","setState","target","name","value","console","log","state","sendRestAPI","data","post","then","res","message","username","catch","error","history","push","validateCustRegister","isValid","email","password","alert","isEmail","handleSubmit","buyerData","zipcode","owner","restaurantData","signupFlag","restaurantSignup","switchForm","bind","render","ownerForm","userForm","accountType","propTypes","func","isRequired","user","object","mapStateToProps","signup"],"mappings":"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":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Button ,Input} from 'reactstrap';\nimport backendServer from \"../../webConfig\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userSignup } from \"../../actions/signupActions\";\nimport validator from 'validator';\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // username: null,\n            // email: null,\n            // password: null,\n            // //restaurantname: null,\n            // zipcode: null,\n            // owner: false,\n            // message: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.switchForm = this.switchForm.bind(this);\n    }\n\n    handleChange = (e) => {\n        e.preventDefault();\n        this.setState({ [e.target.name]: e.target.value });\n        console.log(this.state);\n    }\n\n    //send registration data to server for processing\n    sendRestAPI = (data) => {\n      // console.log(\"data\"+data)\n        axios.post(`${backendServer}/register`, data)\n            .then(res => {\n                if(res.data.message){\n                    this.setState({message:res.data.message})\n\n                }else{\n                    this.setState({ message: res.data.username }) \n                    this.setState({ username: res.data.username })\n                }\n                \n            }).catch(\n                (error) => {\n                  console.log(error);\n                }\n            );\n            const {history} = this.props;\n            history.push('/login'); \n          \n    }\n validateCustRegister = () => {\n           let isValid = true;\n        \n        if(this.state.name === null ||this.state.email === null ||this.state.password === null  ){\n        alert(\"Fields cannot be empty\");\n           isValid = false;\n        }else\n        {if (!validator.isEmail(this.state.email)) {\n        alert('Enter valid Email!')\n        isValid = false;\n        }\n        } \n        \n        return isValid;\n     }\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const buyerData = {\n            name: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            //restaurantname: \"N/A\",\n            zipcode: \"N/A\",\n            owner: false\n        }\n        const restaurantData = {\n            name: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            //restaurantname: \"N/A\",\n            zipcode: this.state.zipcode,\n            owner: true\n        }\n        console.log(\"Checking owner\");\n        console.log(this.state.owner);\n        if(!this.state.owner){\n           if (this.validateCustRegister() === true) {           \n             this.props.userSignup(buyerData);\n\n              this.setState({\n                  signupFlag: 1,\n              });\n            }\n        }else{\n            if (this.validateCustRegister() === true) {           \n             this.props.restaurantSignup(restaurantData);\n\n              this.setState({\n                  signupFlag: 1,\n              });\n            }\n        }\n      \n       \n\n        \n\n    }\n\n    //switch between user and owner sign up form\n    switchForm = (e) => {\n        (!this.state.owner) ? this.setState({ owner: true }) : this.setState({ owner: false });\n    }\n\n    render() {\n        var ownerForm = null;\n        var userForm = null;\n        var accountType = \"Owner\";\n        if (this.state.owner) {\n            ownerForm =\n            <div className=\"form-group\">\n                <div >\n                    Restaurant Name: <Input className=\"form-control\" type=\"text\" name=\"username\" maxlength=\"30\" placeholder=\"Restaurant name\" value={this.state.username} onChange={this.handleChange} required></Input>\n                    ZipCode: <Input  className=\"form-control\" type=\"number\" name=\"zipcode\" maxlength=\"5\" placeholder=\"5 digits\" value={this.state.zipcode} onChange={this.handleChange} required></Input>\n                </div>\n                </div>\n            accountType = \"User\";\n        } else{\n            userForm =\n            <div >\n            Name:<br/> <Input className=\"form-control\" type=\"text\" name=\"username\" placeholder=\"Your name\" minlength=\"3\" maxlength=\"30\" value={this.state.username} onChange={this.handleChange} required></Input>\n        </div>\n         accountType = \"Owner\";\n        }\n\n        return (\n\n\n            <div>\n           \n            <div className=\"container\">\n              <div className=\"login-form\">\n                <div className=\"main-div\">\n                  <div className=\"panel\">\n                  <h1>Let's get started.</h1>\n                    <p>Please enter required details to register.</p>\n                  </div>\n                  {userForm}\n                  {ownerForm}\n                  <div className=\"form-group\">\n\n                  Email: <Input   className=\"form-control\" type=\"email\" name=\"email\" placeholder=\"example@gmail.com\" value={this.state.email} onChange={this.handleChange} required></Input>\n                   \n                  </div>\n                  <div className=\"form-group\">\n\n                  Password: <Input className=\"form-control\" type=\"password\" name=\"password\" placeholder=\"At least 6 characters\" minlength=\"6\" maxlength=\"16\" id=\"password\" value={this.state.password} onChange={this.handleChange} required></Input>\n                    \n                  </div>\n                  <div className=\"form-group\">\n                  <Button className=\"btn btn-primary\" onClick={this.handleSubmit}>Register</Button> &nbsp;\n                <Button onClick={this.switchForm}>Sign Up as {accountType}</Button>\n                  </div>\n                  <h4>Already have an account? <Link to=\"/login\">Login</Link></h4><br />\n                    <h2> {this.state.message} </h2>\n                 \n                  </div>\n                </div>\n              </div>\n            </div>\n       \n            // <div class=\"container\">\n            //     <form onSubmit={this.handleSubmit}>\n            //     <h1>Let's get started</h1>\n            //     <div className='form-control'>\n            //         {userForm}\n            //         {ownerForm}\n            //         Email: <input type=\"email\" name=\"email\" placeholder=\"example@gmail.com\" value={this.state.email} onChange={this.handleChange} required></input><br />\n            //         Password: <input type=\"password\" name=\"password\" placeholder=\"At least 6 characters\" minlength=\"6\" maxlength=\"16\" id=\"password\" value={this.state.password} onChange={this.handleChange} required></input><br />\n                   \n            //         <div>\n            //         <Button>Register</Button> &nbsp;\n            //         <Button onClick={this.switchForm}>Sign Up as {accountType}</Button>\n            //         </div><br />\n            //         <div>Already have an account? <Link to=\"/login\">Login</Link></div><br />\n            //         <div> {this.state.message} </div>\n            //         </div>\n            //     </form>\n            // </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n  userSignup: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  \n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.signup.user,\n  };\n};\n\nexport default connect(mapStateToProps, { userSignup})(Register);\n\n\n// import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\n// import { Button ,Input} from 'reactstrap';\n// import { Redirect } from 'react-router';\n\n// import validator from 'validator';\n// import PropTypes from \"prop-types\";\n// import { connect } from \"react-redux\";\n// import { userSignup } from \"../../actions/signupActions\";\n// class Register extends Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.state = {};\n\n//         this.handleChange = this.handleChange.bind(this);\n//         this.handleSubmit = this.handleSubmit.bind(this);\n//         this.switchForm = this.switchForm.bind(this);\n//     }\n\n//     handleChange = (e) => {\n//         e.preventDefault();\n//         this.setState({ [e.target.name]: e.target.value });\n//         console.log(this.state);\n//     }\n    \n//     nullOrEmpty(str) {\n//         return str === null || str === \"\" \n//     }\n//     validateCustRegister = () => {\n//         let isValid = true;\n//         if(this.nullOrEmpty(this.state.username)  || this.nullOrEmpty(this.state.email) ||  this.nullOrEmpty(this.state.password)){\n//         alert(\"Fields cannot be empty\");\n//            isValid = false;\n//         }\n//         else{\n//             if (!validator.isEmail(this.state.email)) {\n//                 alert('Enter valid Email!')\n//                 isValid = false;\n//             }\n            \n//             if(!this.state.username.match(/^[a-zA-Z ]+$/)){\n//                 alert(\"Name can contain only alphabets\")\n//                 isValid = false;\n//             }\n//         } \n//         return isValid;\n//      }\n   \n//     handleSubmit = (e) => {\n//         e.preventDefault();\n\n//         const buyerData = {\n//             name: this.state.username,\n//             email: this.state.email,\n//             password: this.state.password,\n//             //restaurantname: \"N/A\",\n//             zipcode: \"N/A\",\n//             owner: false\n//         }\n\n//         const ownerData = {\n//             name: this.state.username,\n//             email: this.state.email,\n//             password: this.state.password,\n//             //restaurantname: this.state.restaurantname,\n//             zipcode: this.state.zipcode,\n//             owner: true\n//         }\n//         console.log(ownerData);\n//         if (!this.state.owner) {   \n//                 this.props.userSignup(buyerData);          \n//         } else {\n//                 this.props.userSignup(ownerData);   \n//         }\n\n//     }\n//     login = (e) => {\n//         e.preventDefault();\n//         const {history} = this.props;\n//         history.push('/login'); \n//     }\n//     //switch between user and owner sign up form\n//     switchForm = (e) => {\n//         (!this.state.owner) ? this.setState({ owner: true }) : this.setState({ owner: false });\n//     }\n\n//     render() {\n        \n//         //localStorage.setItem(\"message\",this.props.user.message)\n//         let redirectHome = null;\n//         var ownerForm = null;\n//         var userForm = null;\n//         var accountType = \"Owner\";\n//         if(this.props.user.message === \"User Registration successful\"){\n//             redirectHome = <Redirect to=\"/Login\" />\n//             this.props.user.message = null;\n//         }\n//         else{\n//             redirectHome = <Redirect to=\"/Register\" />\n            \n           \n//         }\n        \n//         // if(this.state.message == \"User email already registered\"){\n//         //     alert(\"Email already exists\");\n//         // }\n//         if (this.state.owner) {\n//             ownerForm =\n           \n//             <div className=\"form-group\">\n//                 <div >\n//                 <form onSubmit={this.handleSubmit}>\n//                   <div className=\"form-group\">\n                      \n//                   Restaurant Name:  <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Restaurant Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n//                   ZipCode: <input type=\"text\" className=\"form-control\" name=\"zipcode\" onChange={this.handleChange} placeholder=\"Enter zip code\" pattern=\"^[0-9]{5,6}$\" required />\n//                   Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n\n//                   Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />\n//                   <Button className=\"btn btn-primary\" >Register</Button> &nbsp;\n                 \n//                   </div>\n                 \n                  \n                \n//                   </form>\n\n//                 </div>\n//                 </div>\n            \n//             accountType = \"User\";\n//         } else{\n//             userForm =\n//             <form onSubmit={this.handleSubmit}>\n//             <div className=\"form-group\">\n\n//             Name: <input type=\"text\" className=\"form-control\" name=\"username\" onChange={this.handleChange} placeholder=\"Enter Customer Name\" pattern=\"^[A-Za-z0-9 ]+$\" required />\n//              Email:  <input type=\"text\" className=\"form-control\" name=\"email\" onChange={this.handleChange} placeholder=\"Email Id\" pattern=\"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$'%&*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])$\" required />\n//                   Password:  <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\" required />   \n//                   <Button className=\"btn btn-primary\" >Register</Button> &nbsp;\n                  \n//                   </div>\n                  \n                  \n        \n//         </form>\n//          accountType = \"Owner\";\n//         }\n       \n//         return (\n\n\n//             <div className =\"body-login\">\n//                 {redirectHome}\n           \n//             <div className=\"container\">\n//               <div className=\"login-form\">\n//                 <div className=\"main-div\">\n//                   <div className=\"panel\">\n//                   <h1>Let's get started.</h1>\n//                     <p>Please enter required details to register.</p>\n//                   </div>\n//                   {userForm}\n//                   {ownerForm}\n                \n//                   <Button onClick={this.switchForm}>Sign Up as {accountType}</Button>\n                 \n//                   <h4>Already have an account?<Button  color=\"link\" onClick={this.login}><h4>Login</h4></Button></h4>\n//                   <div  style={{color: \"#ff0000\"}}><h4>{this.props.user.message}</h4></div> \n//                   </div>\n//                 </div>\n//               </div>\n//             </div>\n//         )\n//     }\n// }\n// Register.propTypes = {\n//     userSignup: PropTypes.func.isRequired,\n//     user: PropTypes.object.isRequired,\n   \n//   };\n  \n//   const mapStateToProps = (state) => {\n//     return {\n//       user: state.signup.user,\n//     };\n//   };\n  \n//   export default connect(mapStateToProps, { userSignup})(Register);"]},"metadata":{},"sourceType":"module"}