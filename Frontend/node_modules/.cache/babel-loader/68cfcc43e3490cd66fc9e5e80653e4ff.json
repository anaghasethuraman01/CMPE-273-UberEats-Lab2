{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Input } from 'reactstrap';\nimport { Button } from 'react-bootstrap';\nimport backendServer from \"../../webConfig\";\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userLogin, restaurantLogin } from \"../../actions/loginActions\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.sendRestaurantAPI = data => {\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/restlogin`, data).then(res => {\n        console.log(res.data['result']);\n\n        if (res.data.message) {\n          this.setState({\n            message: res.data.message\n          });\n        } else {\n          var data1 = res.data['result'];\n          this.setState({\n            username: data1['username']\n          });\n          this.setState({\n            phone: data1['phone']\n          });\n          this.setState({\n            zipcode: data1['zipcode']\n          });\n          this.setState({\n            timing: data1['timing']\n          });\n          this.setState({\n            description: data1['description']\n          });\n          this.setState({\n            city: data1['city']\n          });\n          this.setState({\n            days: data1['days']\n          });\n          this.setState({\n            deliverytype: data1['deliverytype']\n          });\n          this.setState({\n            foodtype: data1['foodtype']\n          });\n          this.setState({\n            restaurantid: res.data['userid']\n          });\n          this.setState({\n            owner: data1['owner']\n          });\n          this.setState({\n            restprofilepic: data1['profilepic']\n          });\n          this.setState({\n            status: res.data['status']\n          });\n          console.log(this.state.restaurantid);\n          console.log(this.state.status);\n        }\n\n        console.log(\"Status Code : \", res.status);\n\n        if (res.status === 200) {\n          this.setState({\n            authFlag: true\n          });\n        } else {\n          this.setState({\n            authFlag: false\n          });\n        }\n      });\n    };\n\n    this.sendCustomerAPI = data => {\n      axios.defaults.withCredentials = true;\n      axios.post(`${backendServer}/custlogin`, data).then(res => {\n        // console.log(\"in login\")\n        //  console.log(res.data)\n        if (res.data.message) {\n          //  console.log(\"mess\")\n          this.setState({\n            message: res.data.message\n          });\n        } else {\n          //   console.log(\"here\")\n          var data1 = res.data['result'];\n          console.log(data1);\n          this.setState({\n            username: data1['username']\n          });\n          this.setState({\n            dob: data1['dob']\n          });\n          this.setState({\n            nickname: data1['nickname']\n          });\n          this.setState({\n            phone: data1['phone']\n          });\n          this.setState({\n            state: data1['state']\n          });\n          this.setState({\n            city: data1['city']\n          });\n          this.setState({\n            address: data1['address']\n          });\n          this.setState({\n            country: data1['country']\n          });\n          this.setState({\n            about: data1['about']\n          });\n          this.setState({\n            owner: data1['owner']\n          });\n          this.setState({\n            profilepic: data1['profilepic']\n          });\n          this.setState({\n            userid: res.data['userid']\n          });\n          this.setState({\n            status: res.data['status']\n          }); // console.log(this.state.restaurantid)\n          // console.log(this.state.status)\n        }\n\n        console.log(\"Status Code : \", res.status);\n\n        if (res.status === 200) {\n          this.setState({\n            authFlag: true\n          });\n        } else {\n          this.setState({\n            authFlag: false\n          });\n        }\n      });\n    };\n\n    this.validateLogin = () => {\n      let isValid = true;\n      console.log(this.state.email);\n\n      if (this.state.email === null || this.state.password === null) {\n        alert(\"Fields cannot be empty\");\n        isValid = false;\n      } else {\n        if (!validator.isEmail(this.state.email)) {\n          alert('Enter valid Email!');\n          isValid = false;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (this.validateLogin() === true) {\n        const credential = {\n          email: this.state.email,\n          password: this.state.password,\n          usertype: this.state.usertype\n        };\n\n        if (credential.usertype === 'customer') {\n          // console.log(\"customer\")\n          this.props.userLogin(credential);\n        } else if (credential.usertype === 'restaurant') {\n          this.props.restaurantLogin(credential);\n        } else {\n          alert(\"Provide valid user type\");\n        }\n      }\n    };\n\n    this.register = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/register');\n    };\n\n    this.state = {}; // this.state = {\n    //     email: null,\n    //     password: null,\n    //     authFlag: false,\n    //     message:null,\n    //     phone:null,\n    //     username:null,\n    //     owner:null,\n    //     usertype:null,\n    //     restaurantname:null,\n    //     zipcode:null,\n    //     description:null,\n    //     timing:null,\n    //     userid:null,\n    //     restaurantid:null,\n    //     status:null,\n    //     city:null,\n    //     address:null,\n    //     deliverytype:null,\n    //     foodtype:null,\n    //     days:null,\n    //     profilepic:null,\n    //     restprofilepic:null,\n    // };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false\n    });\n  }\n\n  render() {\n    let redirectVar = null;\n    let redirectHome = null;\n\n    if (cookie.load('cookie')) {\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 28\n        }\n      });\n    }\n\n    if (this.props.login.message === \"Customer Found\") {\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/CustomerHome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 28\n        }\n      });\n    } else if (this.props.login.message === \"Restaurant Found\") {\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/RestaurantHome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 28\n        }\n      });\n    } else {\n      let message = this.props.login.message;\n    } // if(this.props.login.obj.message === \"Customer Found\"){\n    //     console.log(\"custoner found\")\n    // }\n    // if(this.state.usertype === 'restaurant'){\n    //     redirectHome = <Redirect to=\"/RestaurantHome\" />\n    // }\n\n\n    if (this.state.usertype === 'restaurant' && this.state.status === \"notfound\") {\n      localStorage.setItem(\"restaurantid\", this.state.restaurantid);\n      localStorage.setItem(\"email\", this.state.email);\n      localStorage.setItem(\"restaurantname\", this.state.username);\n      localStorage.setItem(\"phone\", \"Add\");\n      localStorage.setItem(\"zipcode\", this.state.zipcode);\n      localStorage.setItem(\"description\", \"Add\");\n      localStorage.setItem(\"timing\", \"Add\");\n      localStorage.setItem(\"city\", \"Add\");\n      localStorage.setItem(\"days\", \"Add\");\n      localStorage.setItem(\"deliverytype\", \"Add\");\n      localStorage.setItem(\"foodtype\", \"Add\");\n      localStorage.setItem(\"restprofilepic\", \"Add\");\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/RestaurantHome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 28\n        }\n      });\n    }\n\n    if (this.state.status === \"notfound\" && this.state.usertype === 'customer') {\n      localStorage.setItem(\"userid\", this.state.userid);\n      localStorage.setItem(\"email\", this.state.email);\n      localStorage.setItem(\"username\", this.state.username);\n      localStorage.setItem(\"phone\", \"Add\");\n      localStorage.setItem(\"dob\", \"Add\");\n      localStorage.setItem(\"about\", \"Add\");\n      localStorage.setItem(\"nickname\", \"Add\");\n      localStorage.setItem(\"address\", \"Add\");\n      localStorage.setItem(\"city\", \"Add\");\n      localStorage.setItem(\"state\", \"Add\");\n      localStorage.setItem(\"country\", \"Add\");\n      localStorage.setItem(\"profilepic\", \"Add\");\n      redirectHome = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/CustomerHome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 28\n        }\n      });\n    }\n\n    if (this.state.status === \"found\" && this.state.usertype === 'customer') {\n      localStorage.setItem(\"userid\", this.state.userid);\n      localStorage.setItem(\"email\", this.state.email);\n      localStorage.setItem(\"username\", this.state.username);\n      localStorage.setItem(\"phone\", this.state.phone);\n      localStorage.setItem(\"dob\", this.state.dob);\n      localStorage.setItem(\"about\", this.state.about);\n      localStorage.setItem(\"nickname\", this.state.nickname);\n      localStorage.setItem(\"city\", this.state.city);\n      localStorage.setItem(\"state\", this.state.state);\n      localStorage.setItem(\"country\", this.state.country);\n      localStorage.setItem(\"profilepic\", this.state.profilepic); //  const {history} = this.props;\n      // console.log(\"here\");\n      // history.push('/customerhome');\n\n      redirectVar = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/CustomerHome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 23\n        }\n      });\n    }\n\n    if (this.state.usertype === 'restaurant' && this.state.status === \"found\") {\n      localStorage.setItem(\"restaurantid\", this.state.restaurantid);\n      localStorage.setItem(\"email\", this.state.email);\n      localStorage.setItem(\"restaurantname\", this.state.username);\n      localStorage.setItem(\"phone\", this.state.phone);\n      localStorage.setItem(\"zipcode\", this.state.zipcode);\n      localStorage.setItem(\"description\", this.state.description);\n      localStorage.setItem(\"timing\", this.state.timing);\n      localStorage.setItem(\"city\", this.state.city);\n      localStorage.setItem(\"deliverytype\", this.state.deliverytype);\n      localStorage.setItem(\"foodtype\", this.state.foodtype);\n      localStorage.setItem(\"days\", this.state.days);\n      localStorage.setItem(\"restprofilepic\", this.state.restprofilepic); // const {history} = this.props;\n      // history.push('/restauranthome');\n\n      redirectVar = /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/RestaurantHome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 23\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"body-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }\n    }, redirectHome, redirectVar, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, \"Welcome to Uber Eats.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }\n    }, \"Please enter your email and password.\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 15\n      }\n    }, \"Email: \", /*#__PURE__*/React.createElement(Input, {\n      className: \"form-control\",\n      id: \"email\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"example@gmail.com\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 15\n      }\n    }, \"Password: \", /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"At least 6 characters\",\n      minlength: \"6\",\n      maxlength: \"16\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"usertype\",\n      name: \"usertype\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    }, \"User type\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"customer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, \"Customer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"restaurant\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, \"Restaurant\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleSubmit,\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }, \"New to Uber Eats?\", /*#__PURE__*/React.createElement(Button, {\n      variant: \"link\",\n      onClick: this.register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 84\n      }\n    }, \"Create an account\"))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: \"#ff0000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 48\n      }\n    }, this.props.login.message))))))) // </Col>\n    // </Row>\n    // </Container>\n    ;\n  }\n\n}\n\nLogin.propTypes = {\n  userLogin: PropTypes.func.isRequired,\n  restaurantLogin: PropTypes.func.isRequired,\n  login: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login.login\n  };\n};\n\nexport default connect(mapStateToProps, {\n  userLogin,\n  restaurantLogin\n})(Login);","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab1  Redux copy/Frontend/src/components/Login/Login.js"],"names":["React","Component","Link","Redirect","axios","cookie","Input","Button","backendServer","validator","PropTypes","connect","userLogin","restaurantLogin","Login","constructor","props","handleChange","e","setState","target","name","value","sendRestaurantAPI","data","defaults","withCredentials","post","then","res","console","log","message","data1","username","phone","zipcode","timing","description","city","days","deliverytype","foodtype","restaurantid","owner","restprofilepic","status","state","authFlag","sendCustomerAPI","dob","nickname","address","country","about","profilepic","userid","validateLogin","isValid","email","password","alert","isEmail","handleSubmit","preventDefault","credential","usertype","register","history","push","bind","componentWillMount","render","redirectVar","redirectHome","load","login","localStorage","setItem","color","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport {Input} from 'reactstrap';\nimport { Button } from 'react-bootstrap';\nimport backendServer from \"../../webConfig\";\nimport validator from 'validator';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { userLogin,restaurantLogin} from \"../../actions/loginActions\";\nclass Login extends Component {\n \n    constructor(props) {\n        super(props);\n        this.state= {};\n        // this.state = {\n        //     email: null,\n        //     password: null,\n        //     authFlag: false,\n        //     message:null,\n        //     phone:null,\n        //     username:null,\n        //     owner:null,\n        //     usertype:null,\n        //     restaurantname:null,\n        //     zipcode:null,\n        //     description:null,\n        //     timing:null,\n        //     userid:null,\n        //     restaurantid:null,\n        //     status:null,\n        //     city:null,\n        //     address:null,\n        //     deliverytype:null,\n        //     foodtype:null,\n        //     days:null,\n        //     profilepic:null,\n        //     restprofilepic:null,\n        \n        // };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentWillMount() {\n        this.setState({\n            authFlag: false\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    sendRestaurantAPI = (data) => {\n        axios.defaults.withCredentials = true;\n        axios.post(`${backendServer}/restlogin`, data)\n        \n            .then(res => {  \n                console.log(res.data['result']);\n                if(res.data.message){\n                    this.setState({ message: res.data.message });\n                } \n                else{  \n                    var data1 = res.data['result'];\n                    \n                    this.setState({username:data1['username']});\n                    this.setState({phone:data1['phone']});\n                    this.setState({ zipcode: data1['zipcode']})\n                    this.setState({ timing: data1['timing']})\n                    this.setState({ description:data1['description']})\n                    this.setState({ city: data1['city']})\n                    this.setState({ days: data1['days']})\n                    this.setState({ deliverytype:data1['deliverytype']})\n                    this.setState({ foodtype:data1['foodtype']})\n                    this.setState({restaurantid:res.data['userid']});\n                    this.setState({ owner:data1['owner']});\n                    this.setState({ restprofilepic:data1['profilepic']})\n                    \n                    this.setState({status:res.data['status']});\n                    console.log(this.state.restaurantid)\n                    console.log(this.state.status)\n                }\n                console.log(\"Status Code : \", res.status);\n                if (res.status === 200) {\n                    this.setState({ authFlag: true })\n                } else {\n                    this.setState({ authFlag: false })\n                }\n            });\n    }\n    sendCustomerAPI = (data) => {\n        axios.defaults.withCredentials = true;\n        axios.post(`${backendServer}/custlogin`, data)\n            .then(res => {   \n                // console.log(\"in login\")\n                //  console.log(res.data)\n                 if(res.data.message){\n                    //  console.log(\"mess\")\n                    this.setState({ message: res.data.message })\n                }else{\n                    //   console.log(\"here\")\n                    var data1 = res.data['result'];\n                    console.log(data1);\n                    this.setState({username:data1['username']});\n                    this.setState({dob:data1['dob']});\n                    this.setState({nickname:data1['nickname']});\n                    this.setState({phone:data1['phone']});\n                    this.setState({ state: data1['state']})\n                    this.setState({ city: data1['city']})\n                    this.setState({ address: data1['address']})\n                    this.setState({ country: data1['country']})\n                    this.setState({ about:data1['about']})\n                    this.setState({ owner:data1['owner']})\n                    this.setState({ profilepic:data1['profilepic']})\n                    this.setState({ userid:res.data['userid']});\n                    this.setState({status:res.data['status']});\n                    \n                    // console.log(this.state.restaurantid)\n                    // console.log(this.state.status)\n                }\n                \n                console.log(\"Status Code : \", res.status);\n                if (res.status === 200) {\n                    this.setState({ authFlag: true })\n                } else {\n                    this.setState({ authFlag: false })\n                }\n            });\n    }\n     validateLogin = () => {\n        let isValid = true;\n        console.log(this.state.email);\n        if(this.state.email === null ||this.state.password === null  ){\n        alert(\"Fields cannot be empty\");\n           isValid = false;\n        }else\n        {if (!validator.isEmail(this.state.email)) {\n        alert('Enter valid Email!')\n        isValid = false;\n        }\n        } \n        \n        return isValid;\n     }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        if (this.validateLogin() === true) {\n        const credential = {\n            email: this.state.email,\n            password: this.state.password,\n            usertype:this.state.usertype\n        }\n        \n        if(credential.usertype === 'customer'){\n            // console.log(\"customer\")\n            this.props.userLogin(credential);\n        }else if(credential.usertype === 'restaurant'){\n            this.props.restaurantLogin(credential);\n            \n        }else{\n            alert(\"Provide valid user type\");\n        }\n        }\n        \n    }\n    register = (e) => {\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/register'); \n    }\n    render() {\n        let redirectVar = null;\n        let redirectHome = null;\n        if (cookie.load('cookie')) { \n            redirectHome = <Redirect to=\"/\" />\n\n        }\n        if(this.props.login.message === \"Customer Found\"){\n            redirectHome = <Redirect to=\"/CustomerHome\" />\n        }else if(this.props.login.message === \"Restaurant Found\"){\n            redirectHome = <Redirect to=\"/RestaurantHome\" />\n        }\n        else{\n            let message = this.props.login.message\n        }\n\n        // if(this.props.login.obj.message === \"Customer Found\"){\n        //     console.log(\"custoner found\")\n        // }\n        // if(this.state.usertype === 'restaurant'){\n        //     redirectHome = <Redirect to=\"/RestaurantHome\" />\n        // }\n        if(this.state.usertype === 'restaurant' && this.state.status===\"notfound\"){\n            localStorage.setItem(\"restaurantid\",this.state.restaurantid);\n            localStorage.setItem(\"email\",this.state.email);\n            localStorage.setItem(\"restaurantname\",this.state.username);\n            localStorage.setItem(\"phone\",\"Add\");\n            localStorage.setItem(\"zipcode\",this.state.zipcode);\n            localStorage.setItem(\"description\",\"Add\");\n            localStorage.setItem(\"timing\",\"Add\");\n            localStorage.setItem(\"city\",\"Add\");\n            localStorage.setItem(\"days\",\"Add\");\n            localStorage.setItem(\"deliverytype\",\"Add\");\n            localStorage.setItem(\"foodtype\",\"Add\");\n            localStorage.setItem(\"restprofilepic\",\"Add\");\n           \n            redirectHome = <Redirect to=\"/RestaurantHome\" />\n        }\n\n        if( this.state.status===\"notfound\" && this.state.usertype === 'customer'){\n        localStorage.setItem(\"userid\",this.state.userid);\n        localStorage.setItem(\"email\",this.state.email);\n        localStorage.setItem(\"username\",this.state.username);\n        localStorage.setItem(\"phone\",\"Add\");\n        localStorage.setItem(\"dob\",\"Add\");\n        localStorage.setItem(\"about\",\"Add\");\n        localStorage.setItem(\"nickname\",\"Add\");\n        localStorage.setItem(\"address\",\"Add\");\n        localStorage.setItem(\"city\",\"Add\");\n        localStorage.setItem(\"state\",\"Add\");\n        localStorage.setItem(\"country\",\"Add\");\n        localStorage.setItem(\"profilepic\",\"Add\");\n            redirectHome = <Redirect to=\"/CustomerHome\" />\n        }\n        \n       if( this.state.status===\"found\" && this.state.usertype === 'customer' ){\n        localStorage.setItem(\"userid\",this.state.userid);\n        localStorage.setItem(\"email\",this.state.email);\n        localStorage.setItem(\"username\",this.state.username);\n        localStorage.setItem(\"phone\",this.state.phone);\n        localStorage.setItem(\"dob\",this.state.dob);\n        localStorage.setItem(\"about\",this.state.about);\n        localStorage.setItem(\"nickname\",this.state.nickname);\n        localStorage.setItem(\"city\",this.state.city);\n        localStorage.setItem(\"state\",this.state.state);\n        localStorage.setItem(\"country\",this.state.country);\n        localStorage.setItem(\"profilepic\",this.state.profilepic);\n        //  const {history} = this.props;\n        // console.log(\"here\");\n        // history.push('/customerhome');\n        redirectVar = <Redirect to=\"/CustomerHome\" />;\n         \n       }\n       if(this.state.usertype === 'restaurant' && this.state.status===\"found\"){\n       \n        localStorage.setItem(\"restaurantid\",this.state.restaurantid);\n        localStorage.setItem(\"email\",this.state.email);\n        localStorage.setItem(\"restaurantname\",this.state.username);\n        localStorage.setItem(\"phone\",this.state.phone);\n        localStorage.setItem(\"zipcode\",this.state.zipcode);\n        localStorage.setItem(\"description\",this.state.description);\n        localStorage.setItem(\"timing\",this.state.timing);\n        localStorage.setItem(\"city\",this.state.city);\n        localStorage.setItem(\"deliverytype\",this.state.deliverytype);\n        localStorage.setItem(\"foodtype\",this.state.foodtype);\n        localStorage.setItem(\"days\",this.state.days);\n        localStorage.setItem(\"restprofilepic\",this.state.restprofilepic);\n        // const {history} = this.props;\n        // history.push('/restauranthome');\n        redirectVar = <Redirect to=\"/RestaurantHome\" />;\n        \n       }\n\n        return (\n            \n            \n            <div className =\"body-login\">{redirectHome}\n                {redirectVar}\n\n            <div className=\"container\">\n            <div className=\"login-form\">\n            <div className=\"main-div\">\n            <div className=\"panel\">\n                <h1>Welcome to Uber Eats.</h1>\n                <p>Please enter your email and password.</p>\n            </div >\n\n              <div className=\"form-group\">\n                \n              Email: <Input className=\"form-control\" id=\"email\" type=\"email\" name=\"email\" placeholder=\"example@gmail.com\" \n                    value={this.state.email} onChange={this.handleChange}required></Input>\n               \n              </div>\n              <div className=\"form-group\">\n                  \n              Password: <Input type=\"password\" name=\"password\" placeholder=\"At least 6 characters\" minlength=\"6\" maxlength=\"16\"  \n                    value={this.state.password} onChange={this.handleChange} required></Input>\n              </div>\n              <div className=\"form-group\">\n              <select className=\"usertype\" name=\"usertype\" value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"\">User type</option>\n                        <option value=\"customer\">Customer</option>\n                        <option value=\"restaurant\">Restaurant</option>\n                    </select>\n                  </div>\n              <div className=\"form-group\">\n\n              <Button onClick={this.handleSubmit} className=\"btn btn-primary\">Login</Button>\n              <h4>New to Uber Eats?<Button  variant=\"link\" onClick={this.register}><h4>Create an account</h4></Button></h4>\n              <div  style={{color: \"#ff0000\"}}><h4>{this.props.login.message}</h4></div> \n                \n              </div>\n              \n            </div>\n          </div>\n        </div>\n        </div>\n        \n        // </Col>\n        // </Row>\n        // </Container>\n        )\n    }\n}\n\nLogin.propTypes = {\n    userLogin: PropTypes.func.isRequired,\n    restaurantLogin: PropTypes.func.isRequired,\n    login: PropTypes.object.isRequired,\n  };\n  \n  const mapStateToProps = (state) => {\n    return {\n      login: state.login.login,\n    };\n  };\n  export default connect(mapStateToProps, {userLogin,restaurantLogin})(Login);"]},"metadata":{},"sourceType":"module"}