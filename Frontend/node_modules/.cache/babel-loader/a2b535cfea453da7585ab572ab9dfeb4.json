{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab2/Frontend/src/components/Dashboard/CustomerOrder.js\";\nimport Button from '@restart/ui/esm/Button';\nimport React, { Component } from 'react';\nimport { FaShoppingCart } from 'react-icons/fa';\nimport { Modal, Container, Row, Col, Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../webConfig\";\nimport PropTypes from 'prop-types';\n\nclass CustomerOrder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.goback = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/customerhome');\n    };\n\n    this.viewreceipt = val => {\n      this.setState({\n        show: true\n      });\n      this.setState({\n        receiptdetails: []\n      });\n      const receiptval = {\n        orderid: val\n      };\n      axios.post(`${backendServer}/getorderreceipt`, receiptval).then(response => {\n        this.setState({\n          receiptdetails: this.state.receiptdetails.concat(response.data)\n        });\n      });\n    };\n\n    this.searchOrder = ordersearch => {\n      axios.post(`${backendServer}/handleordersearch`, ordersearch).then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            ordermsg: \"searchdone\"\n          });\n          this.setState({\n            orderstatusmsg: \"notfound\"\n          });\n        } // //update the state with the response data\n\n\n        this.setState({\n          customerorders: this.state.customerorders.concat(response.data)\n        });\n        console.log(this.state.customerorders);\n      });\n    };\n\n    this.handleordersearch = e => {\n      e.preventDefault();\n      this.setState({\n        customerorders: []\n      });\n      const ordersearch = {\n        orderstatus: this.state.orderstatus,\n        customerid: this.state.customerid\n      };\n\n      if (this.state.orderstatus === \"All\") {\n        this.componentDidMount();\n      }\n\n      this.searchOrder(ordersearch);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      show: false,\n      customerid: localStorage.getItem(\"userid\"),\n      restaurantid: localStorage.getItem(\"restid\"),\n      dishes: [],\n      dishprice: null,\n      dishname: null,\n      status: null,\n      customerorders: [],\n      customerordersearch: [],\n      orderstatusmsg: null,\n      receiptdetails: [],\n      orderstatus: null,\n      ordermsg: null\n    }; //this.handleCheckout = this.handleCheckout.bind(this);\n  }\n\n  handleModalClose() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  componentDidMount() {\n    const customerid = this.state.customerid;\n\n    if (customerid) {\n      const val = {\n        customerid: customerid\n      };\n      axios.post(`${backendServer}/getitemsfromorders`, val).then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            orderstatusmsg: \"found\"\n          }); // //update the state with the response data\n\n          this.setState({\n            customerorders: this.state.customerorders.concat(response.data)\n          });\n        } // console.log(this.state.customerorders)\n        // console.log(this.state.orderstatusmsg)\n\n      });\n    }\n  }\n\n  render() {\n    var orderlist = null;\n    var searchorderlist = null;\n\n    if (this.state.orderstatusmsg == \"found\") {\n      orderlist = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, \" Your Orders \"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, this.state.customerorders.map(customerorder => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"form-control-order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 27\n        }\n      }, customerorder.restaurantname, \"  \", /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 63\n        }\n      }, customerorder.orderstatus), \"  \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 27\n        }\n      }, customerorder.totalorderquantity, \" items for $\", customerorder.totalorderprice, \" . \", customerorder.datetime, \".\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          this.viewreceipt(customerorder.orderid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 31\n        }\n      }, \"View Receipt\")))))))));\n    }\n\n    if (this.state.ordermsg == \"searchdone\") {\n      console.log(\"here\");\n      orderlist = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, \" Your Orders \"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      }, this.state.customerorders.map(customerorder1 => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"form-control-order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 27\n        }\n      }, customerorder1.restaurantname, \"  \", /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 64\n        }\n      }, customerorder1.orderstatus), \"  \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 27\n        }\n      }, customerorder1.totalorderquantity, \" items for $\", customerorder1.totalorderprice, \" . \", customerorder1.datetime, \".\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          this.viewreceipt(customerorder1.orderid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 31\n        }\n      }, \"View Receipt\")))))))));\n    } // else{\n    //    orderlist = ( \n    //     <div>\n    //         <h1> No Orders </h1>\n    //     </div>\n    //    )\n    // }\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 12\n      }\n    }, \"Order Type :\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"orderstatus\",\n      value: this.state.orderstatus,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 16\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Order Received\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 16\n      }\n    }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Preparing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 16\n      }\n    }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"On the way\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 16\n      }\n    }, \"On the way\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Delivered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, \"Delivered\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Pick up Ready\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, \"Pick up Ready\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Picked up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, \"Picked up\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleordersearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 7\n      }\n    }, \"Search\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, \" \", orderlist, \" \"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.goback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, \"Home Page\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.show,\n      onHide: () => this.handleModalClose(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 40\n      }\n    }, \" Receipt\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 16\n      }\n    }, this.state.receiptdetails.map(receiptdetail => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"receipt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, \" \", receiptdetail.dishname), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"receipt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, \" $\", receiptdetail.price), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"receipt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }\n    }, \" Qty :\", receiptdetail.quantity))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 14\n      }\n    }))));\n  }\n\n}\n\nexport default CustomerOrder;","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab2/Frontend/src/components/Dashboard/CustomerOrder.js"],"names":["Button","React","Component","FaShoppingCart","Modal","Container","Row","Col","Table","axios","backendServer","PropTypes","CustomerOrder","constructor","props","goback","e","preventDefault","history","push","viewreceipt","val","setState","show","receiptdetails","receiptval","orderid","post","then","response","state","concat","data","searchOrder","ordersearch","length","ordermsg","orderstatusmsg","customerorders","console","log","handleordersearch","orderstatus","customerid","componentDidMount","handleChange","target","name","value","localStorage","getItem","restaurantid","dishes","dishprice","dishname","status","customerordersearch","handleModalClose","render","orderlist","searchorderlist","map","customerorder","restaurantname","totalorderquantity","totalorderprice","datetime","customerorder1","receiptdetail","price","quantity"],"mappings":"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","sourcesContent":["\nimport Button from '@restart/ui/esm/Button';\nimport React, {Component} from 'react'\nimport {FaShoppingCart} from 'react-icons/fa';\nimport {Modal, Container,Row,Col,Table} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../webConfig\";\nimport PropTypes from 'prop-types';\n\nclass CustomerOrder extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n     this.state = {\n      \n      show: false,\n      customerid: localStorage.getItem(\"userid\"),\n      restaurantid : localStorage.getItem(\"restid\"),\n      dishes : [],\n      dishprice : null,\n      dishname:null,\n      status :null,\n      customerorders : [],\n      customerordersearch : [],\n      orderstatusmsg:null,\n      receiptdetails:[],\n      orderstatus:null,\n      ordermsg:null\n  \n    }\n     //this.handleCheckout = this.handleCheckout.bind(this);\n  }\n    goback = (e) =>{\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/customerhome'); \n      }\n  handleModalClose(){\n      this.setState({show:!this.state.show}) \n        }\n    viewreceipt= (val) =>{\n      this.setState({show:true});\n       this.setState({\n            receiptdetails : [] \n          });\n      const receiptval = {\n                orderid:val\n            }\n       axios.post(`${backendServer}/getorderreceipt`,receiptval).then((response) => {\n         this.setState({\n            receiptdetails : this.state.receiptdetails.concat(response.data) \n          });\n       });\n\n    }\n       \n componentDidMount() {\n     \n      const customerid = this.state.customerid;\n\t    if(customerid){\n            const val = {\n                customerid:customerid\n            }\n           \n          axios.post(`${backendServer}/getitemsfromorders`,val).then((response) => {\n              \n                if(response.data.length > 0){\n                    this.setState({ orderstatusmsg: \"found\" });\n               \n                // //update the state with the response data\n                this.setState({\n                customerorders: this.state.customerorders.concat(response.data),\n                });\n              }\n                // console.log(this.state.customerorders)\n                // console.log(this.state.orderstatusmsg)\n            });\n\n        }\n       \n\t}\nsearchOrder = (ordersearch) => {\n    axios.post(`${backendServer}/handleordersearch`,ordersearch).then((response) => {\n                    if(response.data.length > 0){\n                        this.setState({ ordermsg: \"searchdone\" });\n                        this.setState({ orderstatusmsg: \"notfound\" });\n                    }\n                    // //update the state with the response data\n                     this.setState({\n                      customerorders: this.state.customerorders.concat(response.data),\n                      });\n                      console.log(this.state.customerorders)\n                    \n    });\n}\nhandleordersearch = (e) =>{\n  e.preventDefault();\n   this.setState({\n        customerorders: []\n    });\n  \n  const ordersearch = {\n    orderstatus : this.state.orderstatus,\n    customerid : this.state.customerid\n  }\n \n if(this.state.orderstatus === \"All\"){\n   this.componentDidMount();\n }\n  this.searchOrder(ordersearch);\n}\nhandleChange = (e) => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n    render(){\n        \n       \tvar orderlist = null;\n         var searchorderlist = null;\n         \n              if(this.state.orderstatusmsg == \"found\") {\n                orderlist = ( \n                <div>\n                    <h1> Your Orders </h1>\n                <div>\n                \n                    {this.state.customerorders.map((customerorder) => (\n                    <div>\n                      <Table>\n                        <thead>\n                        <tr className=\"form-control-order\">\n                          <th>{customerorder.restaurantname}  <h4>{customerorder.orderstatus}</h4>  </th>\n        \n                          <th>{customerorder.totalorderquantity} items for ${customerorder.totalorderprice} . {customerorder.datetime}.</th>\n                          <th><Button \n                           onClick={() => {\n                                this.viewreceipt(customerorder.orderid);\n                                }}>View Receipt</Button></th>   \n                        </tr>\n                      </thead>\n                      </Table>\n                    </div>\n                    ))}\n                </div>\n                </div>\n                );\n            }\n            if(this.state.ordermsg == \"searchdone\" ){\n              console.log(\"here\")\n                orderlist = ( \n                <div>\n                    <h1> Your Orders </h1>\n                <div>\n                \n                    {this.state.customerorders.map((customerorder1) => (\n                    <div>\n                      <Table>\n                        <thead>\n                        <tr className=\"form-control-order\">\n                          <th>{customerorder1.restaurantname}  <h4>{customerorder1.orderstatus}</h4>  </th>\n                          <th>{customerorder1.totalorderquantity} items for ${customerorder1.totalorderprice} . {customerorder1.datetime}.</th>\n                          <th><Button \n                           onClick={() => {\n                                this.viewreceipt(customerorder1.orderid);\n                                }}>View Receipt</Button></th>   \n                        </tr>\n                      </thead>\n                      </Table>\n                       </div>\n                    ))}\n                </div>\n                </div>\n                )\n            }\n            // else{\n            //    orderlist = ( \n            //     <div>\n            //         <h1> No Orders </h1>\n            //     </div>\n            //    )\n\n            // }\n     \n    return (\n        <div className=\"container\" >\n          <div>\n           \n           <form >\n\t\t\t\t\t\t Order Type :\n            \t<select  name=\"orderstatus\"   value={this.state.orderstatus}  onChange={this.handleChange}>\n              \t<option value=\"All\">All</option> \n              \t<option value=\"Order Received\" >Order Received</option>\n              \t<option value=\"Preparing\"  >Preparing</option>\n              \t<option value=\"On the way\" >On the way</option>\n                <option value=\"Delivered\" >Delivered</option>\n                <option value=\"Pick up Ready\" >Pick up Ready</option>\n                <option value=\"Picked up\" >Picked up</option>\n            \t</select>\n\t\t\t\t\t\t<Button \n             onClick={\n                  this.handleordersearch\n              }>\n            \n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n          </div>\n\n          <br/><br/><br/>\n          <div> {orderlist} </div> \n         \n          <Button onClick={this.goback}>Home Page</Button>\n                       <div>\n         <Modal size=\"md-down\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n           show={this.state.show} onHide={()=>this.handleModalClose()}>\n             <Modal.Header closeButton><h4> Receipt</h4></Modal.Header>\n             <Modal.Body>\n               <div>\n              {this.state.receiptdetails.map(receiptdetail=>\n              <div >\n                <th className=\"receipt\"> {receiptdetail.dishname}</th>\n                <th className=\"receipt\"> ${receiptdetail.price}</th>\n                <th className=\"receipt\"> Qty :{receiptdetail.quantity}</th>\n                \n              </div>)}\n              </div>\n\n             </Modal.Body>\n\n             <Modal.Footer>\n              \n             </Modal.Footer>\n           </Modal>\n          </div>\n       </div>\n    )\n    }\n}\n\nexport default CustomerOrder\n"]},"metadata":{},"sourceType":"module"}