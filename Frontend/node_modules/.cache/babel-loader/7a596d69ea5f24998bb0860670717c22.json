{"ast":null,"code":"var _jsxFileName = \"/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab2/Frontend/src/components/Dashboard/OrdersPage.js\";\nimport Button from '@restart/ui/esm/Button';\nimport React, { Component } from 'react';\nimport { Modal, Table } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../webConfig\";\n\nclass OrdersPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = e => {\n      e.preventDefault();\n      window.localStorage.clear();\n      const {\n        history\n      } = this.props;\n      history.push('/login');\n    };\n\n    this.goback = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n      history.push('/restauranthome');\n    };\n\n    this.handleChangeOrderType = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.updatestatusfn = (valid, otype) => {\n      const ordertypedata = {\n        orderid: valid,\n        ordertype: otype\n      }; //console.log(ordertypedata)\n\n      this.updateOrderStatus(ordertypedata);\n    };\n\n    this.handleChange = (e, orderid) => {\n      const {\n        restaurantorders\n      } = this.state;\n      const index = restaurantorders.findIndex(order => order.orderid === orderid);\n      const orders = [...restaurantorders];\n      orders[index].orderstatus = e.target.value;\n      this.setState({\n        restaurantorders: orders\n      });\n    };\n\n    this.updateOrderStatus = ordertypedata => {\n      console.log(ordertypedata);\n      axios.post(`${backendServer}/updateordertype`, ordertypedata).then(res => {\n        console.log(\"Order type updated\");\n      });\n    };\n\n    this.handleordersearch = e => {\n      e.preventDefault();\n      this.setState({\n        restaurantorders: []\n      });\n      const ordersearch = {\n        ordermodetype: this.state.ordermodetype,\n        restaurantid: this.state.restaurantid\n      };\n\n      if (this.state.ordermodetype === \"All\") {\n        this.componentDidMount();\n      } else {\n        this.searchOrder(ordersearch);\n      }\n    };\n\n    this.searchOrder = ordersearch => {\n      console.log(ordersearch);\n      axios.post(`${backendServer}/handleordermodesearch`, ordersearch).then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            ordermsg: \"searchdone\"\n          });\n          this.setState({\n            orderstatusmsg: \"notfound\"\n          });\n        } // //update the state with the response data\n\n\n        this.setState({\n          restaurantorders: this.state.restaurantorders.concat(response.data)\n        });\n        console.log(this.state.restaurantorders);\n      });\n    };\n\n    this.handleChangeOrder = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      showcustprofile: false,\n      customerid: localStorage.getItem(\"userid\"),\n      restaurantid: localStorage.getItem(\"restaurantid\"),\n      dishes: [],\n      dishprice: null,\n      dishname: null,\n      status: null,\n      restaurantorders: [],\n      orderstatusmsg: null,\n      updatestatus: false,\n      orderstatus: null,\n      orderid: null,\n      ordermsg: null,\n      ordermodetype: null,\n      customerdetails: [],\n      customername: null,\n      customernickname: null,\n      customerabout: null,\n      custprofilepic: null\n    }; //this.handleCheckout = this.handleCheckout.bind(this);\n  }\n\n  handleModalCloseCustView() {\n    this.setState({\n      showcustprofile: !this.state.showcustprofile\n    });\n  }\n\n  viewcustomerprofile(CustId) {\n    this.setState({\n      customerdetails: []\n    });\n    const customerid = {\n      userid: CustId\n    };\n    axios.post(`${backendServer}/getcustomerprofile`, customerid).then(response => {\n      console.log(response.data); //update the state with the response data\n\n      this.setState({\n        customerdetails: this.state.customerdetails.concat(response.data)\n      });\n      this.setState({\n        customername: this.state.customerdetails[0]['username']\n      });\n      this.setState({\n        customernickname: this.state.customerdetails[0]['nickname']\n      });\n      this.setState({\n        customerabout: this.state.customerdetails[0]['about']\n      });\n      this.setState({\n        customerabout: this.state.customerdetails[0]['about']\n      });\n      this.setState({\n        custprofilepic: this.state.customerdetails[0]['profilepic']\n      });\n      console.log(this.state.customerdetails);\n    });\n    this.setState({\n      showcustprofile: true\n    });\n  }\n\n  componentDidMount() {\n    const restaurantid = this.state.restaurantid;\n\n    if (restaurantid) {\n      const val = {\n        restaurantid: restaurantid\n      };\n      axios.post(`${backendServer}/getrestaurantorders`, val).then(response => {\n        if (response.data.length > 0) {\n          this.setState({\n            orderstatusmsg: \"found\"\n          });\n        } // //update the state with the response data\n\n\n        this.setState({\n          restaurantorders: this.state.restaurantorders.concat(response.data)\n        });\n        console.log(this.state.restaurantorders);\n      });\n    }\n  }\n\n  render() {\n    const imgLink = `${backendServer}/${this.state.custprofilepic}`;\n    var orderlist = null;\n\n    if (this.state.orderstatusmsg === \"found\") {\n      orderlist = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }\n      }, \"  Orders Received \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, this.state.restaurantorders.map(customerorder => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"form-control-order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 27\n        }\n      }, \"Customer Name : \", customerorder.customername, \"   \", /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          this.viewcustomerprofile(customerorder.customerid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 78\n        }\n      }, \"View Profile\"), \" \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 27\n        }\n      }, \"Date : \", customerorder.datetime, \" . \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 65\n        }\n      }), \" Total Items : \", customerorder.totalorderquantity, \" item(s).\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 128\n        }\n      }), \" Total Price : $\", customerorder.totalorderprice), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 27\n        }\n      }, \"Order Status : \", customerorder.orderstatus, \" \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 27\n        }\n      }, customerorder.ordertype == \"Pick Up\" && /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 31\n        }\n      }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n        name: \"orderstatus\",\n        value: this.state.orderstatus,\n        onChange: e => {\n          this.handleChange(e, customerorder.orderid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Order Received\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 35\n        }\n      }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Preparing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 35\n        }\n      }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Pick up Ready\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 35\n        }\n      }, \"Pick up Ready\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Picked up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 35\n        }\n      }, \"Picked up\")), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        onClick: () => {\n          this.updatestatusfn(customerorder.orderid, customerorder.orderstatus);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 31\n        }\n      }, \"Update\")), customerorder.ordertype == \"Delivery\" && /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 31\n        }\n      }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n        name: \"orderstatus\",\n        value: this.state.orderstatus,\n        onChange: e => {\n          this.handleChange(e, customerorder.orderid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Order Received\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 35\n        }\n      }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Preparing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 35\n        }\n      }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"On the way\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 35\n        }\n      }, \"On the way\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Delivered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 35\n        }\n      }, \"Delivered\")), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        onClick: () => {\n          this.updatestatusfn(customerorder.orderid, customerorder.orderstatus);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 34\n        }\n      }, \"Update\")), customerorder.ordertype == \"Pick Up and Delivery\" && /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 31\n        }\n      }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n        name: \"orderstatus\",\n        value: this.state.orderstatus,\n        onChange: e => {\n          this.handleChange(e, customerorder.orderid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Order Received\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 35\n        }\n      }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Preparing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 35\n        }\n      }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"On the way\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 35\n        }\n      }, \"On the way\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Delivered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 35\n        }\n      }, \"Delivered\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Pick up Ready\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 35\n        }\n      }, \"Pick up Ready\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Picked up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 35\n        }\n      }, \"Picked up\")), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        onClick: () => {\n          this.updatestatusfn(customerorder.orderid, customerorder.orderstatus);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 34\n        }\n      }, \"Update\"))))))))));\n    }\n\n    if (this.state.ordermsg == \"searchdone\") {\n      orderlist = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }\n      }, \"  Orders Received \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }\n      }, this.state.restaurantorders.map(customerorder => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"form-control-order\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 27\n        }\n      }, \"Customer Name : \", customerorder.customername, \" \", /*#__PURE__*/React.createElement(Button, {\n        onClick: () => {\n          this.viewcustomerprofile(customerorder.customerid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 76\n        }\n      }, \"View Profile\"), \" \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 27\n        }\n      }, \"Date : \", customerorder.datetime, \" . \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 65\n        }\n      }), \" Total Items : \", customerorder.totalorderquantity, \" item(s).\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 128\n        }\n      }), \" Total Price : $\", customerorder.totalorderprice), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 27\n        }\n      }, \"Order Status : \", customerorder.orderstatus, \" \"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 27\n        }\n      }, customerorder.ordertype == \"Pick Up\" && /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 31\n        }\n      }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n        name: \"orderstatus\",\n        value: this.state.orderstatus,\n        onChange: e => {\n          this.handleChange(e, customerorder.orderid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Order Received\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 35\n        }\n      }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Preparing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 35\n        }\n      }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Pick up Ready\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 35\n        }\n      }, \"Pick up Ready\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Picked up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 35\n        }\n      }, \"Picked up\")), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        onClick: () => {\n          this.updatestatusfn(customerorder.orderid, customerorder.orderstatus);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 31\n        }\n      }, \"Update\")), customerorder.ordertype == \"Delivery\" && /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 31\n        }\n      }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n        name: \"orderstatus\",\n        value: this.state.orderstatus,\n        onChange: e => {\n          this.handleChange(e, customerorder.orderid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Order Received\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 35\n        }\n      }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Preparing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 35\n        }\n      }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"On the way\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 35\n        }\n      }, \"On the way\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Delivered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 35\n        }\n      }, \"Delivered\")), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        onClick: () => {\n          this.updatestatusfn(customerorder.orderid, customerorder.orderstatus);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 34\n        }\n      }, \"Update\")), customerorder.ordertype == \"Pick Up and Delivery\" && /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 31\n        }\n      }, \"Status Type :\", /*#__PURE__*/React.createElement(\"select\", {\n        name: \"orderstatus\",\n        value: this.state.orderstatus,\n        onChange: e => {\n          this.handleChange(e, customerorder.orderid);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Order Received\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 35\n        }\n      }, \"Order Received\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Preparing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 35\n        }\n      }, \"Preparing\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"On the way\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 35\n        }\n      }, \"On the way\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Delivered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 35\n        }\n      }, \"Delivered\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Pick up Ready\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 35\n        }\n      }, \"Pick up Ready\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"Picked up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 35\n        }\n      }, \"Picked up\")), /*#__PURE__*/React.createElement(Button, {\n        type: \"submit\",\n        onClick: () => {\n          this.updatestatusfn(customerorder.orderid, customerorder.orderstatus);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 34\n        }\n      }, \"Update\"))))))))));\n    } // else {\n    //    orderlist = ( \n    //     <div>\n    //         <h1> No Orders </h1>\n    //     </div>\n    //    )\n    // }\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 12\n      }\n    }, \"Order Type :\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"ordermodetype\",\n      value: this.state.ordermodetype,\n      onChange: this.handleChangeOrder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 16\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"New Order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 16\n      }\n    }, \"New Order\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Delivered Order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 16\n      }\n    }, \"Delivered Order\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleordersearch,\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 7\n      }\n    }, \"Search\"))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }\n    }, \" \", orderlist, \" \"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.goback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 12\n      }\n    }, \"Home Page\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      size: \"md-down\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      show: this.state.showcustprofile,\n      onHide: () => this.handleModalCloseCustView(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 40\n      }\n    }, \"Customer Profile\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      className: \"form-control-order\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 21\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"img\", {\n      src: imgLink,\n      alt: \"No image added. Add Image.\",\n      style: {\n        maxHeight: '5rem',\n        maxWidth: '10rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 26\n      }\n    })), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 21\n      }\n    }, \" Name : \", this.state.customername), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }\n    }, \" Nick Name : \", this.state.customernickname), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 21\n      }\n    }, \" About: \", this.state.customerabout))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 14\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-logout\",\n      onClick: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 7\n      }\n    }, \"Logout\"));\n  }\n\n}\n\nexport default OrdersPage;","map":{"version":3,"sources":["/Users/anaghasethuraman/Desktop/CMPE-273-UberEats-application-prototype Lab2/Frontend/src/components/Dashboard/OrdersPage.js"],"names":["Button","React","Component","Modal","Table","axios","backendServer","OrdersPage","constructor","props","logout","e","preventDefault","window","localStorage","clear","history","push","goback","handleChangeOrderType","setState","target","name","value","updatestatusfn","valid","otype","ordertypedata","orderid","ordertype","updateOrderStatus","handleChange","restaurantorders","state","index","findIndex","order","orders","orderstatus","console","log","post","then","res","handleordersearch","ordersearch","ordermodetype","restaurantid","componentDidMount","searchOrder","response","data","length","ordermsg","orderstatusmsg","concat","handleChangeOrder","showcustprofile","customerid","getItem","dishes","dishprice","dishname","status","updatestatus","customerdetails","customername","customernickname","customerabout","custprofilepic","handleModalCloseCustView","viewcustomerprofile","CustId","userid","val","render","imgLink","orderlist","map","customerorder","datetime","totalorderquantity","totalorderprice","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["\nimport Button from '@restart/ui/esm/Button';\nimport React, {Component} from 'react'\nimport {Modal,Table} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../webConfig\";\n\n\nclass OrdersPage extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n     this.state = {\n      \n      \n      showcustprofile:false,\n      customerid: localStorage.getItem(\"userid\"),\n      restaurantid : localStorage.getItem(\"restaurantid\"),\n      dishes : [],\n      dishprice : null,\n      dishname:null,\n      status :null,\n      restaurantorders : [],\n      orderstatusmsg:null,\n      updatestatus:false,\n      orderstatus:null,\n      orderid:null,\n      ordermsg:null,\n      ordermodetype:null,\n      customerdetails:[],\n      customername:null,\n      customernickname:null,\n      customerabout:null,\n      custprofilepic:null,\n      \n  \n    }\n     //this.handleCheckout = this.handleCheckout.bind(this);\n  }\n  logout = e => {\n    e.preventDefault();\n    window.localStorage.clear();\n    const {history} = this.props;\n    history.push('/login'); \n  }\n   \n    handleModalCloseCustView(){\n        this.setState({showcustprofile:!this.state.showcustprofile}) \n    }  \n    goback = (e) =>{\n        e.preventDefault();\n        const {history} = this.props;\n        history.push('/restauranthome'); \n      }\n      viewcustomerprofile(CustId){\n        this.setState({\n          customerdetails: [],\n        });\n        const customerid = {\n          userid: CustId\n        };\n        axios.post(`${backendServer}/getcustomerprofile`,customerid).then((response) => {\n          console.log(response.data);\n          \n          //update the state with the response data\n          this.setState({\n            customerdetails: this.state.customerdetails.concat(response.data),\n          });\n          this.setState({\n            customername: this.state.customerdetails[0]['username'],\n          });\n          this.setState({\n            customernickname: this.state.customerdetails[0]['nickname'],\n          });\n          this.setState({\n            customerabout: this.state.customerdetails[0]['about'],\n          });\n          this.setState({\n            customerabout: this.state.customerdetails[0]['about'],\n          });\n          this.setState({\n            custprofilepic: this.state.customerdetails[0]['profilepic'],\n          });\n          console.log(this.state.customerdetails)\n        });\n        this.setState({\n          showcustprofile : true \n        });\n      }\n componentDidMount() {\n      \n        const restaurantid = this.state.restaurantid;\n\t    if(restaurantid){\n            const val = {\n                restaurantid:restaurantid\n            }\n\n           \n          axios.post(`${backendServer}/getrestaurantorders`,val).then((response) => {\n              \n                if(response.data.length > 0){\n                    this.setState({ orderstatusmsg: \"found\" });\n                }\n                // //update the state with the response data\n                this.setState({\n                restaurantorders: this.state.restaurantorders.concat(response.data),\n                });\n                console.log(this.state.restaurantorders)\n                \n            });\n\n        }\n       \n\t}\nhandleChangeOrderType = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n        }\n\n updatestatusfn = (valid,otype) =>{\n   \n   const ordertypedata = {\n     orderid : valid,\n     ordertype : otype\n   }\n   //console.log(ordertypedata)\n  this.updateOrderStatus(ordertypedata);\n   \n }\n\n\nhandleChange = (e, orderid) => {\n    const { restaurantorders } = this.state;\n    const index = restaurantorders.findIndex((order) => order.orderid === orderid);\n    const orders = [...restaurantorders];\n    orders[index].orderstatus = e.target.value;\n    this.setState({ restaurantorders: orders });\n  }\n\n updateOrderStatus = (ordertypedata)=>{\n   console.log(ordertypedata)\n    axios.post(`${backendServer}/updateordertype`, ordertypedata)\n            .then(res => {\n                console.log(\"Order type updated\")\n            })\n            \n }\nhandleordersearch = (e) => {\n  e.preventDefault();\n   this.setState({\n      restaurantorders: []\n    });\n    const ordersearch = {\n    ordermodetype : this.state.ordermodetype,\n    restaurantid : this.state.restaurantid\n    }\n \n    if(this.state.ordermodetype === \"All\"){\n      this.componentDidMount();\n    }else\n    {\n      this.searchOrder(ordersearch);\n    }\n    \n\n}\n\nsearchOrder = (ordersearch) => {\n    console.log(ordersearch);\n    axios.post(`${backendServer}/handleordermodesearch`,ordersearch).then((response) => {\n                    if(response.data.length > 0){\n                        this.setState({ ordermsg: \"searchdone\" });\n                        this.setState({ orderstatusmsg: \"notfound\" });\n                    }\n                    // //update the state with the response data\n                     this.setState({\n                      restaurantorders: this.state.restaurantorders.concat(response.data),\n                      });\n                      console.log(this.state.restaurantorders)\n                    \n    });\n}\n\n handleChangeOrder = (e) => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n    render(){\n        const imgLink = `${backendServer}/${this.state.custprofilepic}`;\n      \n       \tvar orderlist = null;\n              if(this.state.orderstatusmsg === \"found\") {\n                orderlist = ( \n                <div>\n                    <h1>  Orders Received </h1>\n                    <br/>\n                <div>\n                \n                    {this.state.restaurantorders.map((customerorder) => (\n                      \n                    <div>\n                    \n                      <Table>\n                        <thead>\n                        <tr className=\"form-control-order\">\n                          <th>Customer Name : {customerorder.customername}   <Button onClick={() => {\n                                this.viewcustomerprofile(customerorder.customerid);\n                                }}>View Profile</Button> </th>\n        \n                          <th>Date : {customerorder.datetime} . <br/> Total Items : {customerorder.totalorderquantity} item(s).<br/> Total Price : ${customerorder.totalorderprice}</th>\n                          <th>Order Status : {customerorder.orderstatus} </th>\n                          <th>{\n                            customerorder.ordertype == \"Pick Up\" && (\n                              <form >\n                              Status Type :\n                                <select  name=\"orderstatus\"  value={this.state.orderstatus} onChange={(e) => { this.handleChange(e, customerorder.orderid)}} >\n                                  <option value=\"Order Received\" >Order Received</option>\n                                  <option value=\"Preparing\">Preparing</option>\n                                  <option value=\"Pick up Ready\" >Pick up Ready</option>\n                                  <option value=\"Picked up\" >Picked up</option>\n                                </select>\n                              <Button \n                               type=\"submit\" \n                                onClick={() => {\n                                this.updatestatusfn(customerorder.orderid,customerorder.orderstatus);\n                                }}>\n                                Update\n                              </Button>\n                            </form>\n                            )\n                            }  \n                            {\n                            customerorder.ordertype == \"Delivery\" && (\n                              <form >\n                              Status Type :\n                                <select  name=\"orderstatus\"   value={this.state.orderstatus} onChange={(e) => { this.handleChange(e, customerorder.orderid)}} >\n                                  <option value=\"Order Received\" >Order Received</option>\n                                  <option value=\"Preparing\"  >Preparing</option>\n                                  <option value=\"On the way\" >On the way</option>\n                                  <option value=\"Delivered\" >Delivered</option>\n                                 \n                                </select>\n                                 <Button \n                               type=\"submit\" \n                                onClick={() => {\n                                this.updatestatusfn(customerorder.orderid,customerorder.orderstatus);\n                                }}>\n                                Update\n                              </Button>\n                            </form>\n                            )\n                            }  \n                            {\n                            customerorder.ordertype == \"Pick Up and Delivery\" && (\n                              <form >\n                              Status Type :\n                                <select  name=\"orderstatus\"   value={this.state.orderstatus} onChange={(e) => { this.handleChange(e, customerorder.orderid)}} >\n                                  <option value=\"Order Received\" >Order Received</option>\n                                  <option value=\"Preparing\"  >Preparing</option>\n                                  <option value=\"On the way\" >On the way</option>\n                                  <option value=\"Delivered\" >Delivered</option>\n                                  <option value=\"Pick up Ready\" >Pick up Ready</option>\n                                  <option value=\"Picked up\" >Picked up</option>\n                                </select>\n                                 <Button \n                               type=\"submit\" \n                                onClick={() => {\n                                this.updatestatusfn(customerorder.orderid,customerorder.orderstatus);\n                                }}>\n                                Update\n                              </Button>\n                            </form>\n                            )\n                            }  \n                          </th>\n                         \n                         \n                        </tr>\n                      </thead>\n                      </Table>\n                       \n                      \n                    </div>\n                    ))}\n                </div>\n                </div>\n                );\n            }\n            if(this.state.ordermsg == \"searchdone\"){\n              orderlist = ( \n                <div>\n                    <h1>  Orders Received </h1>\n                    <br/>\n                <div>\n                \n                    {this.state.restaurantorders.map((customerorder) => (\n                      \n                    <div>\n                    \n                      <Table>\n                        <thead>\n                        <tr className=\"form-control-order\">\n                          <th>Customer Name : {customerorder.customername} <Button onClick={() => {\n                                this.viewcustomerprofile(customerorder.customerid);\n                                }}>View Profile</Button> </th>\n        \n                          <th>Date : {customerorder.datetime} . <br/> Total Items : {customerorder.totalorderquantity} item(s).<br/> Total Price : ${customerorder.totalorderprice}</th>\n                          <th>Order Status : {customerorder.orderstatus} </th>\n                          <th>{\n                            customerorder.ordertype == \"Pick Up\" && (\n                              <form >\n                              Status Type :\n                                <select  name=\"orderstatus\"  value={this.state.orderstatus} onChange={(e) => { this.handleChange(e, customerorder.orderid)}} >\n                                  <option value=\"Order Received\" >Order Received</option>\n                                  <option value=\"Preparing\">Preparing</option>\n                                  <option value=\"Pick up Ready\" >Pick up Ready</option>\n                                  <option value=\"Picked up\" >Picked up</option>\n                                </select>\n                              <Button \n                               type=\"submit\" \n                                onClick={() => {\n                                this.updatestatusfn(customerorder.orderid,customerorder.orderstatus);\n                                }}>\n                                Update\n                              </Button>\n                            </form>\n                            )\n                            }  \n                            {\n                            customerorder.ordertype == \"Delivery\" && (\n                              <form >\n                              Status Type :\n                                <select  name=\"orderstatus\"   value={this.state.orderstatus} onChange={(e) => { this.handleChange(e, customerorder.orderid)}} >\n                                  <option value=\"Order Received\" >Order Received</option>\n                                  <option value=\"Preparing\"  >Preparing</option>\n                                  <option value=\"On the way\" >On the way</option>\n                                  <option value=\"Delivered\" >Delivered</option>\n                                </select>\n                                 <Button \n                               type=\"submit\" \n                                onClick={() => {\n                                this.updatestatusfn(customerorder.orderid,customerorder.orderstatus);\n                                }}>\n                                Update\n                              </Button>\n                            </form>\n                            )\n                            }  \n                            {\n                            customerorder.ordertype == \"Pick Up and Delivery\" && (\n                              <form >\n                              Status Type :\n                                <select  name=\"orderstatus\"   value={this.state.orderstatus} onChange={(e) => { this.handleChange(e, customerorder.orderid)}} >\n                                  <option value=\"Order Received\" >Order Received</option>\n                                  <option value=\"Preparing\"  >Preparing</option>\n                                  <option value=\"On the way\" >On the way</option>\n                                  <option value=\"Delivered\" >Delivered</option>\n                                  <option value=\"Pick up Ready\" >Pick up Ready</option>\n                                  <option value=\"Picked up\" >Picked up</option>\n                                </select>\n                                 <Button \n                               type=\"submit\" \n                                onClick={() => {\n                                this.updatestatusfn(customerorder.orderid,customerorder.orderstatus);\n                                }}>\n                                Update\n                              </Button>\n                            </form>\n                            )\n                            }  \n                          </th>\n                        </tr>\n                      </thead>\n                      </Table>\n                    </div>\n                    ))}\n                </div>\n                </div>\n                );\n\n            }\n            \n            // else {\n            //    orderlist = ( \n            //     <div>\n            //         <h1> No Orders </h1>\n            //     </div>\n            //    )\n\n            // }\n     \n    return (\n        <div className=\"container\" >\n          <div>\n           <form >\n\t\t\t\t\t\t Order Type :\n            \t<select  name=\"ordermodetype\"   value={this.state.ordermodetype} onChange={this.handleChangeOrder}>\n              \t<option value=\"All\">All</option> \n              \t<option value=\"New Order\" >New Order</option>\n              \t<option value=\"Delivered Order\"  >Delivered Order</option>\n            \t</select>\n\t\t\t\t\t\t<Button onClick={this.handleordersearch} type=\"submit\">\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n          </div>\n\n          <br/><br/><br/>\n          <div> {orderlist} </div> \n           <Button onClick={this.goback}>Home Page</Button>\n          \n      <div>\n         <Modal size=\"md-down\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n           show={this.state.showcustprofile} onHide={()=>this.handleModalCloseCustView()}>\n             <Modal.Header closeButton><h4>Customer Profile</h4></Modal.Header>\n             <Modal.Body>\n\n             <Table>\n                <thead>\n                  <tr className=\"form-control-order\">\n                    <th> <img src={imgLink} alt=\"No image added. Add Image.\" style={{ maxHeight: '5rem', maxWidth: '10rem' }} /></th>\n                    <th> Name : {this.state.customername}</th>\n                    <th> Nick Name : {this.state.customernickname}</th>\n                    <th> About: {this.state.customerabout}</th>\n                  </tr>\n                </thead>\n              </Table>     \n             </Modal.Body>\n             <Modal.Footer>\n              \n             </Modal.Footer>\n           </Modal>\n      </div>\n      <Button className=\"btn-logout\" onClick={this.logout}>Logout</Button>\n       </div>\n    )\n    }\n}\n\nexport default OrdersPage\n"]},"metadata":{},"sourceType":"module"}